(window["webpackJsonp"] = window["webpackJsonp"] || []).push([[0],{

/***/ "./rusty_web_tetris.js":
/*!***********************************************!*\
  !*** ./rusty_web_tetris.js ***!
  \***********************************************/
/*! exports provided: Cell, Action, Game, Point, __wbindgen_object_drop_ref, __wbindgen_string_new, __widl_f_log_1_, __wbg_random_40717e477b6813d8, __wbindgen_throw */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"Cell\", function() { return Cell; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"Action\", function() { return Action; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"Game\", function() { return Game; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"Point\", function() { return Point; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"__wbindgen_object_drop_ref\", function() { return __wbindgen_object_drop_ref; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"__wbindgen_string_new\", function() { return __wbindgen_string_new; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"__widl_f_log_1_\", function() { return __widl_f_log_1_; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"__wbg_random_40717e477b6813d8\", function() { return __wbg_random_40717e477b6813d8; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"__wbindgen_throw\", function() { return __wbindgen_throw; });\n/* harmony import */ var _rusty_web_tetris_bg_wasm__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./rusty_web_tetris_bg.wasm */ \"./rusty_web_tetris_bg.wasm\");\n\n\nconst heap = new Array(32);\n\nheap.fill(undefined);\n\nheap.push(undefined, null, true, false);\n\nfunction getObject(idx) { return heap[idx]; }\n\nlet heap_next = heap.length;\n\nfunction dropObject(idx) {\n    if (idx < 36) return;\n    heap[idx] = heap_next;\n    heap_next = idx;\n}\n\nfunction takeObject(idx) {\n    const ret = getObject(idx);\n    dropObject(idx);\n    return ret;\n}\n\nlet cachedTextDecoder = new TextDecoder('utf-8', { ignoreBOM: true, fatal: true });\n\ncachedTextDecoder.decode();\n\nlet cachegetUint8Memory0 = null;\nfunction getUint8Memory0() {\n    if (cachegetUint8Memory0 === null || cachegetUint8Memory0.buffer !== _rusty_web_tetris_bg_wasm__WEBPACK_IMPORTED_MODULE_0__[\"memory\"].buffer) {\n        cachegetUint8Memory0 = new Uint8Array(_rusty_web_tetris_bg_wasm__WEBPACK_IMPORTED_MODULE_0__[\"memory\"].buffer);\n    }\n    return cachegetUint8Memory0;\n}\n\nfunction getStringFromWasm0(ptr, len) {\n    return cachedTextDecoder.decode(getUint8Memory0().subarray(ptr, ptr + len));\n}\n\nfunction addHeapObject(obj) {\n    if (heap_next === heap.length) heap.push(heap.length + 1);\n    const idx = heap_next;\n    heap_next = heap[idx];\n\n    heap[idx] = obj;\n    return idx;\n}\n\nlet WASM_VECTOR_LEN = 0;\n\nfunction passArray8ToWasm0(arg, malloc) {\n    const ptr = malloc(arg.length * 1);\n    getUint8Memory0().set(arg, ptr / 1);\n    WASM_VECTOR_LEN = arg.length;\n    return ptr;\n}\n\nfunction notDefined(what) { return () => { throw new Error(`${what} is not defined`); }; }\n/**\n* A Cell is a byte representation of a possible pieces value\n*/\nconst Cell = Object.freeze({ I:0,O:1,T:2,S:3,Z:4,J:5,L:6,EMPTY:7, });\n/**\n*/\nconst Action = Object.freeze({ HardDrop:0,HoldPiece:1,RotateClockWise:2,RotateCounterClockWise:3,MoveLeft:4,MoveRight:5,SoftDrop:6,ToggleRunning:7,Nothing:255, });\n/**\n*/\nclass Game {\n\n    static __wrap(ptr) {\n        const obj = Object.create(Game.prototype);\n        obj.ptr = ptr;\n\n        return obj;\n    }\n\n    free() {\n        const ptr = this.ptr;\n        this.ptr = 0;\n\n        _rusty_web_tetris_bg_wasm__WEBPACK_IMPORTED_MODULE_0__[\"__wbg_game_free\"](ptr);\n    }\n    /**\n    * Create a new tetris game\n    * @returns {Game}\n    */\n    static new() {\n        var ret = _rusty_web_tetris_bg_wasm__WEBPACK_IMPORTED_MODULE_0__[\"game_new\"]();\n        return Game.__wrap(ret);\n    }\n    /**\n    * TODO: Look into changing u8 into Action\n    * wasm_bindgen should be able to have custom types\n    * @param {Uint8Array} events\n    */\n    event_handler(events) {\n        try {\n            var ptr0 = passArray8ToWasm0(events, _rusty_web_tetris_bg_wasm__WEBPACK_IMPORTED_MODULE_0__[\"__wbindgen_malloc\"]);\n            var len0 = WASM_VECTOR_LEN;\n            _rusty_web_tetris_bg_wasm__WEBPACK_IMPORTED_MODULE_0__[\"game_event_handler\"](this.ptr, ptr0, len0);\n        } finally {\n            events.set(getUint8Memory0().subarray(ptr0 / 1, ptr0 / 1 + len0));\n            _rusty_web_tetris_bg_wasm__WEBPACK_IMPORTED_MODULE_0__[\"__wbindgen_free\"](ptr0, len0 * 1);\n        }\n    }\n    /**\n    * @param {number} target_x_pos\n    * @param {number} target_y_pos\n    */\n    touch_event_handler(target_x_pos, target_y_pos) {\n        _rusty_web_tetris_bg_wasm__WEBPACK_IMPORTED_MODULE_0__[\"game_touch_event_handler\"](this.ptr, target_x_pos, target_y_pos);\n    }\n    /**\n    * Update the tetris board\n    * @param {number} this.ptr\n    * @returns {bool}\n    */\n    update(elapsed_time) {\n        var ret = _rusty_web_tetris_bg_wasm__WEBPACK_IMPORTED_MODULE_0__[\"game_update\"](this.ptr, elapsed_time);\n        return ret !== 0;\n    }\n    /**\n    * @returns {bool}\n    */\n    is_game_over() {\n        var ret = _rusty_web_tetris_bg_wasm__WEBPACK_IMPORTED_MODULE_0__[\"game_is_game_over\"](this.ptr);\n        return ret !== 0;\n    }\n    /**\n    * Get the current score of the running game\n    * @returns {number}\n    */\n    get_score() {\n        var ret = _rusty_web_tetris_bg_wasm__WEBPACK_IMPORTED_MODULE_0__[\"game_get_score\"](this.ptr);\n        return ret >>> 0;\n    }\n    /**\n    * Get the width of the game board\n    * @returns {number}\n    */\n    get_width() {\n        var ret = _rusty_web_tetris_bg_wasm__WEBPACK_IMPORTED_MODULE_0__[\"game_get_width\"](this.ptr);\n        return ret;\n    }\n    /**\n    * Get the height of the game board\n    * @returns {number}\n    */\n    get_height() {\n        var ret = _rusty_web_tetris_bg_wasm__WEBPACK_IMPORTED_MODULE_0__[\"game_get_height\"](this.ptr);\n        return ret;\n    }\n    /**\n    * Get the amount of seconds the game has been played for\n    * @returns {number}\n    */\n    get_seconds() {\n        var ret = _rusty_web_tetris_bg_wasm__WEBPACK_IMPORTED_MODULE_0__[\"game_get_seconds\"](this.ptr);\n        return ret;\n    }\n    /**\n    * Get the offset height to make the game field\n    * @returns {number}\n    */\n    get_offset_height() {\n        var ret = _rusty_web_tetris_bg_wasm__WEBPACK_IMPORTED_MODULE_0__[\"game_get_offset_height\"](this.ptr);\n        return ret;\n    }\n    /**\n    * Return the current level of the game board\n    * @returns {number}\n    */\n    get_level() {\n        var ret = _rusty_web_tetris_bg_wasm__WEBPACK_IMPORTED_MODULE_0__[\"game_get_level\"](this.ptr);\n        return ret >>> 0;\n    }\n    /**\n    * Return the number of rows that have been completed\n    * @returns {number}\n    */\n    get_rows_completed() {\n        var ret = _rusty_web_tetris_bg_wasm__WEBPACK_IMPORTED_MODULE_0__[\"game_get_rows_completed\"](this.ptr);\n        return ret >>> 0;\n    }\n    /**\n    * Get the current piece that is currently being held\n    * @returns {number}\n    */\n    get_hold_piece() {\n        var ret = _rusty_web_tetris_bg_wasm__WEBPACK_IMPORTED_MODULE_0__[\"game_get_hold_piece\"](this.ptr);\n        return ret >>> 0;\n    }\n    /**\n    * Get the cells that are in queue to go next\n    * TODO: Give interface to be called without wasm_bindgen\n    * @returns {number}\n    */\n    get_queued_pieces() {\n        var ret = _rusty_web_tetris_bg_wasm__WEBPACK_IMPORTED_MODULE_0__[\"game_get_queued_pieces\"](this.ptr);\n        return ret;\n    }\n    /**\n    * Return a pointer to the first element in the boards vector\n    * TODO: Give interface to be called without wasm_bindgen\n    * @returns {number}\n    */\n    get_cells() {\n        var ret = _rusty_web_tetris_bg_wasm__WEBPACK_IMPORTED_MODULE_0__[\"game_get_cells\"](this.ptr);\n        return ret;\n    }\n    /**\n    * Get the cells that make up the falling piece\n    * TODO: Give interface to be called without wasm_bindgen\n    * @returns {number}\n    */\n    get_pieces() {\n        var ret = _rusty_web_tetris_bg_wasm__WEBPACK_IMPORTED_MODULE_0__[\"game_get_pieces\"](this.ptr);\n        return ret;\n    }\n    /**\n    * Get the pieces bounding box size\n    * @returns {number}\n    */\n    get_piece_bounding_box() {\n        var ret = _rusty_web_tetris_bg_wasm__WEBPACK_IMPORTED_MODULE_0__[\"game_get_piece_bounding_box\"](this.ptr);\n        return ret;\n    }\n    /**\n    * Get the actives pieces type\n    * @returns {number}\n    */\n    get_piece_type() {\n        var ret = _rusty_web_tetris_bg_wasm__WEBPACK_IMPORTED_MODULE_0__[\"game_get_piece_type\"](this.ptr);\n        return ret >>> 0;\n    }\n    /**\n    * Get the world coordinates of the active piece position\n    * @returns {Point}\n    */\n    get_piece_position() {\n        var ret = _rusty_web_tetris_bg_wasm__WEBPACK_IMPORTED_MODULE_0__[\"game_get_piece_position\"](this.ptr);\n        return Point.__wrap(ret);\n    }\n    /**\n    * Get the position of the shadow piece\n    * @returns {Point}\n    */\n    get_shadow_piece_position() {\n        var ret = _rusty_web_tetris_bg_wasm__WEBPACK_IMPORTED_MODULE_0__[\"game_get_shadow_piece_position\"](this.ptr);\n        return Point.__wrap(ret);\n    }\n}\n/**\n*/\nclass Point {\n\n    static __wrap(ptr) {\n        const obj = Object.create(Point.prototype);\n        obj.ptr = ptr;\n\n        return obj;\n    }\n\n    free() {\n        const ptr = this.ptr;\n        this.ptr = 0;\n\n        _rusty_web_tetris_bg_wasm__WEBPACK_IMPORTED_MODULE_0__[\"__wbg_point_free\"](ptr);\n    }\n    /**\n    * @returns {number}\n    */\n    get x() {\n        var ret = _rusty_web_tetris_bg_wasm__WEBPACK_IMPORTED_MODULE_0__[\"__wbg_get_point_x\"](this.ptr);\n        return ret;\n    }\n    /**\n    * @param {number} arg0\n    */\n    set x(arg0) {\n        _rusty_web_tetris_bg_wasm__WEBPACK_IMPORTED_MODULE_0__[\"__wbg_set_point_x\"](this.ptr, arg0);\n    }\n    /**\n    * @returns {number}\n    */\n    get y() {\n        var ret = _rusty_web_tetris_bg_wasm__WEBPACK_IMPORTED_MODULE_0__[\"__wbg_get_point_y\"](this.ptr);\n        return ret;\n    }\n    /**\n    * @param {number} arg0\n    */\n    set y(arg0) {\n        _rusty_web_tetris_bg_wasm__WEBPACK_IMPORTED_MODULE_0__[\"__wbg_set_point_y\"](this.ptr, arg0);\n    }\n}\n\nconst __wbindgen_object_drop_ref = function(arg0) {\n    takeObject(arg0);\n};\n\nconst __wbindgen_string_new = function(arg0, arg1) {\n    var ret = getStringFromWasm0(arg0, arg1);\n    return addHeapObject(ret);\n};\n\nconst __widl_f_log_1_ = function(arg0) {\n    console.log(getObject(arg0));\n};\n\nconst __wbg_random_40717e477b6813d8 = typeof Math.random == 'function' ? Math.random : notDefined('Math.random');\n\nconst __wbindgen_throw = function(arg0, arg1) {\n    throw new Error(getStringFromWasm0(arg0, arg1));\n};\n\n\n\n//# sourceURL=webpack:///./rusty_web_tetris.js?");

/***/ }),

/***/ "./rusty_web_tetris_bg.wasm":
/*!****************************************************!*\
  !*** ./rusty_web_tetris_bg.wasm ***!
  \****************************************************/
/*! exports provided: memory, __wbg_game_free, game_new, game_event_handler, game_touch_event_handler, game_update, game_is_game_over, game_get_score, game_get_width, game_get_height, game_get_seconds, game_get_offset_height, game_get_level, game_get_rows_completed, game_get_hold_piece, game_get_queued_pieces, game_get_cells, game_get_pieces, game_get_piece_bounding_box, game_get_piece_type, game_get_piece_position, game_get_shadow_piece_position, __wbg_point_free, __wbg_get_point_x, __wbg_set_point_x, __wbg_get_point_y, __wbg_set_point_y, __wbindgen_malloc, __wbindgen_free */
/***/ (function(module, exports, __webpack_require__) {

eval("\"use strict\";\n// Instantiate WebAssembly module\nvar wasmExports = __webpack_require__.w[module.i];\n__webpack_require__.r(exports);\n// export exports from WebAssembly module\nfor(var name in wasmExports) if(name != \"__webpack_init__\") exports[name] = wasmExports[name];\n// exec imports from WebAssembly module (for esm order)\n/* harmony import */ var m0 = __webpack_require__(/*! ./rusty_web_tetris.js */ \"./rusty_web_tetris.js\");\n\n\n// exec wasm module\nwasmExports[\"__webpack_init__\"]()\n\n//# sourceURL=webpack:///./rusty_web_tetris_bg.wasm?");

/***/ }),

/***/ "./src/InputController.ts":
/*!********************************!*\
  !*** ./src/InputController.ts ***!
  \********************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return InputController; });\n/* harmony import */ var _tetris_logic_pkg_rusty_web_tetris__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! .././rusty_web_tetris */ \"./rusty_web_tetris.js\");\n\nclass InputController {\n    /**\n     * Create a Input controller\n     */\n    constructor(canvasBoard, holdPieceCanvas) {\n        this.input = {\n            /**\n             * Keyboard input\n             */\n            ShiftLeft: false,\n            ControlLeft: false,\n            Escape: false,\n            Space: false,\n            ArrowLeft: false,\n            ArrowUp: false,\n            ArrowRight: false,\n            ArrowDown: false,\n            KeyC: false,\n            KeyX: false,\n            KeyZ: false,\n            Numpad0: false,\n            Numpad1: false,\n            Numpad2: false,\n            Numpad3: false,\n            Numpad4: false,\n            Numpad5: false,\n            Numpad6: false,\n            Numpad7: false,\n            Numpad8: false,\n            Numpad9: false,\n            F1: false,\n            /**\n             * mouse input\n             */\n            leftClick: false,\n            leftClickHold: false,\n            rightClick: false,\n            rightClickHold: false,\n            middleClick: false,\n            middleClickHold: false,\n            /**\n             * touch input\n             */\n            dragDown: false,\n            holdDown: false,\n            tapHold: false,\n            tapLeft: false,\n            tapRight: false,\n        };\n        this.mouseInput = {\n            x: 0,\n            y: 0,\n            updated: false,\n        };\n        this.touchInput = {\n            startX: 0,\n            startY: 0,\n            x: 0,\n            y: 0,\n            timeStamp: 0,\n            touchStartTime: 0,\n            updated: false\n        };\n        this.touchEventFirst = false;\n        this.keyMap = {\n            16: \"ShiftLeft\",\n            17: \"ControlLeft\",\n            27: \"Escape\",\n            32: \"Space\",\n            37: \"ArrowLeft\",\n            38: \"ArrowUp\",\n            39: \"ArrowRight\",\n            40: \"ArrowDown\",\n            67: \"KeyC\",\n            88: \"KeyX\",\n            90: \"KeyZ\",\n            96: \"Numpad0\",\n            97: \"Numpad1\",\n            98: \"Numpad2\",\n            99: \"Numpad3\",\n            100: \"Numpad4\",\n            101: \"Numpad5\",\n            102: \"Numpad6\",\n            103: \"Numpad7\",\n            104: \"Numpad8\",\n            105: \"Numpad9\",\n            112: \"F1\",\n        };\n        /**\n         * Callback that listens for keyboard events\n         */\n        this.keyboardEvent = (event) => {\n            const code = this.getKeyCode(event);\n            this.input[code] = event.type === \"keydown\";\n        };\n        this.mouseEvent = (event) => {\n            this.mouseInput.x = event.clientX - this.canvasElement.offsetLeft;\n            this.mouseInput.y = event.clientY - this.canvasElement.offsetTop;\n            this.mouseInput.updated = true;\n        };\n        this.mouseClickEvent = (event) => {\n            this.input.leftClick = [1, 3, 5, 7].includes(event.buttons);\n            this.input.rightClick = [2, 3, 6, 7].includes(event.buttons);\n            this.input.middleClick = [4, 5, 6, 7].includes(event.buttons);\n        };\n        this.contextMenuEvent = (event) => {\n            event.preventDefault();\n        };\n        this.touchEvent = (event) => {\n            this.touchEventFirst = true;\n            if (event.type === \"touchend\") {\n                const x = event.changedTouches[0].clientX - this.canvasElement.offsetLeft;\n                const y = event.changedTouches[0].clientY - this.canvasElement.offsetTop;\n                this.touchInput.x = x;\n                this.touchInput.y = y;\n                const diff_x = Math.floor(this.touchInput.startX - x);\n                const diff_y = Math.floor(this.touchInput.startY - y);\n                const timeDiff = event.timeStamp - this.touchInput.touchStartTime;\n                const threshold = 160; // 5 frames\n                const isTap = diff_x >= -1 && diff_x <= 1 && diff_y >= -1 && diff_y <= 1;\n                console.log(timeDiff, diff_x, diff_y, this.touchInput.startX, x);\n                if (timeDiff < threshold && isTap) {\n                    const width_offset = this.canvasElement.width / 2;\n                    if (x < width_offset) {\n                        this.input.tapLeft = true;\n                    }\n                    else {\n                        this.input.tapRight = true;\n                    }\n                }\n                return false;\n            }\n            const x = event.targetTouches[0].clientX - this.canvasElement.offsetLeft;\n            const y = event.targetTouches[0].clientY - this.canvasElement.offsetTop;\n            if (event.type === 'touchstart') {\n                this.touchInput.x = x;\n                this.touchInput.y = y;\n                this.touchInput.timeStamp = event.timeStamp;\n                this.touchInput.startX = x;\n                this.touchInput.startY = y;\n                this.touchInput.touchStartTime = event.timeStamp;\n                return false;\n            }\n            const diff_x = this.touchInput.x - x;\n            const diff_y = this.touchInput.y - y;\n            const abs_x = Math.abs(diff_x);\n            const abs_y = Math.abs(diff_y);\n            const time = event.timeStamp - this.touchInput.timeStamp;\n            const velocity = Math.sqrt(abs_x * abs_x + abs_y * abs_y) / time;\n            const flick_threshold = .8;\n            const isFlick = velocity > flick_threshold;\n            const rad = Math.atan2(y - this.touchInput.y, x - this.touchInput.x);\n            const degree = Math.abs(rad) * 180 / Math.PI;\n            if (degree > 80 && degree < 100 && isFlick) {\n                // swipe down\n                this.input.dragDown = true;\n            }\n            else if ((degree >= -45 && degree <= 45) || (degree < 225 && degree > 135)) {\n                // move left and right\n                this.touchInput.updated = true;\n                this.touchInput.x = x;\n                this.touchInput.y = y;\n                this.touchInput.timeStamp = event.timeStamp;\n                this.input.dragDown = false;\n            }\n            return false;\n        };\n        this.holdPieceEvent = () => {\n            this.input.tapHold = true;\n        };\n        this.listening = false;\n        this.canvasElement = canvasBoard;\n        this.holdPieceCanvas = holdPieceCanvas;\n    }\n    get Input() {\n        return this.input;\n    }\n    /**\n     * Start the input controller.\n     * Throws error when controller is already listening for events\n     */\n    start() {\n        if (this.listening) {\n            throw new Error(\"You can't start listening to the game because you already are!\");\n        }\n        window.addEventListener(\"keyup\", this.keyboardEvent);\n        window.addEventListener(\"keydown\", this.keyboardEvent);\n        /**\n         * Mouse Controls\n         */\n        this.canvasElement.addEventListener(\"mousemove\", this.mouseEvent);\n        this.canvasElement.addEventListener(\"mouseenter\", this.mouseEvent);\n        this.canvasElement.addEventListener(\"mouseleave\", this.mouseEvent);\n        this.canvasElement.addEventListener(\"contextmenu\", this.contextMenuEvent);\n        this.canvasElement.addEventListener(\"mousedown\", this.mouseClickEvent);\n        this.canvasElement.addEventListener(\"mouseup\", this.mouseClickEvent);\n        /**\n         * Touch Controls\n         */\n        this.canvasElement.addEventListener(\"touchmove\", this.touchEvent, { passive: true });\n        this.canvasElement.addEventListener(\"touchstart\", this.touchEvent, { passive: true });\n        this.canvasElement.addEventListener(\"touchend\", this.touchEvent, { passive: true });\n        this.holdPieceCanvas.addEventListener(\"click\", this.holdPieceEvent);\n        this.listening = true;\n    }\n    /**\n     * Stop the input controller, and remove the event listeners from the window.\n     * Throws error if the controller is already in a stopped state\n     */\n    stop() {\n        if (!this.listening) {\n            throw new Error(\"Must start() the InputController before you can stop() it!\");\n        }\n        window.removeEventListener(\"keyup\", this.keyboardEvent);\n        window.removeEventListener(\"keydown\", this.keyboardEvent);\n        this.canvasElement.removeEventListener(\"mousemove\", this.mouseEvent);\n        this.canvasElement.removeEventListener(\"mouseenter\", this.mouseEvent);\n        this.canvasElement.removeEventListener(\"mouseleave\", this.mouseEvent);\n        this.canvasElement.removeEventListener(\"contextmenu\", this.contextMenuEvent);\n        this.canvasElement.removeEventListener(\"mousedown\", this.mouseClickEvent);\n        this.canvasElement.removeEventListener(\"mouseup\", this.mouseClickEvent);\n        this.canvasElement.removeEventListener(\"touchmove\", this.touchEvent);\n        this.canvasElement.removeEventListener(\"touchstart\", this.touchEvent);\n        this.canvasElement.removeEventListener(\"touchend\", this.touchEvent);\n        this.holdPieceCanvas.removeEventListener(\"click\", this.holdPieceEvent);\n        this.listening = false;\n    }\n    // TODO: Convert to back to Action[]\n    getEventQueue() {\n        const i = this.input;\n        const eventQueue = [];\n        if (i.Numpad1 || i.Numpad5 || i.Numpad9 || i.KeyX || i.ArrowUp || i.tapRight) {\n            eventQueue.push(_tetris_logic_pkg_rusty_web_tetris__WEBPACK_IMPORTED_MODULE_0__[\"Action\"].RotateClockWise);\n        }\n        if (i.Numpad3 || i.Numpad7 || i.ControlLeft || i.KeyZ || i.tapLeft) {\n            eventQueue.push(_tetris_logic_pkg_rusty_web_tetris__WEBPACK_IMPORTED_MODULE_0__[\"Action\"].RotateCounterClockWise);\n        }\n        if (i.Numpad8 || i.Space || i.leftClick || i.dragDown) {\n            eventQueue.push(_tetris_logic_pkg_rusty_web_tetris__WEBPACK_IMPORTED_MODULE_0__[\"Action\"].HardDrop);\n        }\n        if (i.Numpad0 || i.KeyC || i.ShiftLeft || i.rightClick || i.tapHold) {\n            eventQueue.push(_tetris_logic_pkg_rusty_web_tetris__WEBPACK_IMPORTED_MODULE_0__[\"Action\"].HoldPiece);\n        }\n        if (i.Numpad4 || i.ArrowLeft) {\n            eventQueue.push(_tetris_logic_pkg_rusty_web_tetris__WEBPACK_IMPORTED_MODULE_0__[\"Action\"].MoveLeft);\n        }\n        if (i.Numpad6 || i.ArrowRight) {\n            eventQueue.push(_tetris_logic_pkg_rusty_web_tetris__WEBPACK_IMPORTED_MODULE_0__[\"Action\"].MoveRight);\n        }\n        if (i.Numpad2 || i.ArrowDown || i.holdDown) {\n            eventQueue.push(_tetris_logic_pkg_rusty_web_tetris__WEBPACK_IMPORTED_MODULE_0__[\"Action\"].SoftDrop);\n        }\n        if (i.Escape) {\n            eventQueue.push(_tetris_logic_pkg_rusty_web_tetris__WEBPACK_IMPORTED_MODULE_0__[\"Action\"].ToggleRunning);\n        }\n        // TODO: THIS SHOULDN'T BE NEEDED, POST An ISSUE\n        const byteEventQueue = new Uint8Array(eventQueue.length);\n        for (let j = 0; j < eventQueue.length; j++) {\n            const event = eventQueue[j];\n            switch (event) {\n                case _tetris_logic_pkg_rusty_web_tetris__WEBPACK_IMPORTED_MODULE_0__[\"Action\"].HardDrop:\n                    byteEventQueue[j] = 0;\n                    break;\n                case _tetris_logic_pkg_rusty_web_tetris__WEBPACK_IMPORTED_MODULE_0__[\"Action\"].HoldPiece:\n                    byteEventQueue[j] = 1;\n                    break;\n                case _tetris_logic_pkg_rusty_web_tetris__WEBPACK_IMPORTED_MODULE_0__[\"Action\"].RotateClockWise:\n                    byteEventQueue[j] = 2;\n                    break;\n                case _tetris_logic_pkg_rusty_web_tetris__WEBPACK_IMPORTED_MODULE_0__[\"Action\"].RotateCounterClockWise:\n                    byteEventQueue[j] = 3;\n                    break;\n                case _tetris_logic_pkg_rusty_web_tetris__WEBPACK_IMPORTED_MODULE_0__[\"Action\"].MoveLeft:\n                    byteEventQueue[j] = 4;\n                    break;\n                case _tetris_logic_pkg_rusty_web_tetris__WEBPACK_IMPORTED_MODULE_0__[\"Action\"].MoveRight:\n                    byteEventQueue[j] = 5;\n                    break;\n                case _tetris_logic_pkg_rusty_web_tetris__WEBPACK_IMPORTED_MODULE_0__[\"Action\"].SoftDrop:\n                    byteEventQueue[j] = 6;\n                    break;\n                case _tetris_logic_pkg_rusty_web_tetris__WEBPACK_IMPORTED_MODULE_0__[\"Action\"].ToggleRunning:\n                    byteEventQueue[j] = 7;\n                    break;\n            }\n        }\n        // toggle all touch events \n        this.input.dragDown = false;\n        this.input.holdDown = false;\n        this.input.tapHold = false;\n        this.input.tapLeft = false;\n        this.input.tapRight = false;\n        return byteEventQueue;\n    }\n    getTouchGridArea(cellSize, boundingBox) {\n        const offset = boundingBox / 2;\n        if (this.mouseInput.updated && this.touchEventFirst === false) {\n            let x = this.mouseInput.x;\n            let y = this.mouseInput.y;\n            x = Math.round(x / cellSize - offset);\n            y = Math.round(y / cellSize - offset);\n            this.mouseInput.updated = false;\n            return { x, y };\n        }\n        if (this.touchInput.updated) {\n            let x = this.touchInput.x;\n            let y = this.touchInput.y;\n            x = Math.round(x / cellSize - offset);\n            y = Math.round(y / cellSize - offset);\n            this.touchInput.updated = false;\n            return { x, y };\n        }\n        return null;\n    }\n    /**\n     * Try and get the key code of the keyboard button pressed\n     * @param event Keyboard browser Event\n     */\n    getKeyCode(event) {\n        // https://developer.mozilla.org/en-US/docs/Web/API/KeyboardEvent\n        // event.code only supports the QWERTY keyboard and assumes everyone\n        // is running that keyboard layout\n        let code = event.code;\n        if (!code) {\n            // TODO: remove \"keyCode\" and replace it with \"key\"\n            code = this.keyMap[event.keyCode];\n        }\n        return code;\n    }\n}\n\n\n//# sourceURL=webpack:///./src/InputController.ts?");

/***/ }),

/***/ "./src/StateManager.ts":
/*!*****************************!*\
  !*** ./src/StateManager.ts ***!
  \*****************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return StateManager; });\nvar __awaiter = (undefined && undefined.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\n/**\n * Website StateManager\n * Control what pages are currently shown to the user\n */\nclass StateManager {\n    constructor() {\n        this.stack = [];\n    }\n    /**\n     * Push a new state onto the stack\n     * @param page state to transfer to\n     * @param hidePervious Should the current state be hidden\n     */\n    Push(page, hideAllPervious = true) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (this.stack.length > 0 && hideAllPervious) {\n                this.stack[this.stack.length - 1].hide();\n            }\n            yield page.show();\n            this.stack.push(page);\n        });\n    }\n    /**\n     * Pop the current state\n     */\n    Pop() {\n        return __awaiter(this, void 0, void 0, function* () {\n            const page = this.stack.pop();\n            page.hide();\n            page.destroy();\n            if (this.stack.length > 0) {\n                const newPage = this.stack[this.stack.length - 1];\n                yield newPage.show();\n            }\n        });\n    }\n    /**\n     * Pop the current state and push a new one on\n     * @param page state to transfer to\n     */\n    Swap(page) {\n        return __awaiter(this, void 0, void 0, function* () {\n            yield this.Pop();\n            yield this.Push(page);\n        });\n    }\n    /**\n     * Remove all pages and transfer to the new one\n     * @param page state to transfer to\n     */\n    ClearAndPush(page) {\n        return __awaiter(this, void 0, void 0, function* () {\n            while (this.stack.length !== 0) {\n                yield this.Pop();\n            }\n            yield this.Push(page);\n        });\n    }\n}\nStateManager.GetInstance = () => {\n    if (StateManager.instance === undefined) {\n        StateManager.instance = new StateManager();\n    }\n    return StateManager.instance;\n};\n\n\n//# sourceURL=webpack:///./src/StateManager.ts?");

/***/ }),

/***/ "./src/Tetris.ts":
/*!***********************!*\
  !*** ./src/Tetris.ts ***!
  \***********************/
/*! exports provided: TetrisEvent, getColor, getCells, default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"TetrisEvent\", function() { return TetrisEvent; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"getColor\", function() { return getColor; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"getCells\", function() { return getCells; });\n/* harmony import */ var _tetris_logic_pkg_rusty_web_tetris__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! .././rusty_web_tetris */ \"./rusty_web_tetris.js\");\n/* harmony import */ var _tetris_logic_pkg_rusty_web_tetris_bg__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! .././rusty_web_tetris_bg */ \"./rusty_web_tetris_bg.wasm\");\n/* harmony import */ var _InputController__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./InputController */ \"./src/InputController.ts\");\n/* harmony import */ var _util__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./util */ \"./src/util.ts\");\n/* harmony import */ var util__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! util */ \"./node_modules/util/util.js\");\n/* harmony import */ var util__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(util__WEBPACK_IMPORTED_MODULE_4__);\n/* harmony import */ var _models_GameRecord__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./models/GameRecord */ \"./src/models/GameRecord.ts\");\n\n\n\n\n\n\nconst DEBUG_GAME = false;\nconst CELL_PREVIEW_AMOUNT = 6;\nvar TetrisEvent;\n(function (TetrisEvent) {\n    TetrisEvent[TetrisEvent[\"GAME_OVER\"] = 0] = \"GAME_OVER\";\n})(TetrisEvent || (TetrisEvent = {}));\n/**\n * Tetris is a small layer that surrounds our tetris game logic in web assembly.\n * Tetris's only job is to run the main loop of the program and update the game\n * board as the state of the game changes\n *\n * Tetris is strongly linked to the index.html page and assumes certain span and\n * canvas elements will be there\n */\nclass Tetris {\n    /**\n     * Create tetris\n     * @param game tetris game logic\n     * @param config settings that change the way the game looks\n     */\n    constructor(game, settings, config) {\n        this.callbackEvents = {};\n        this.animationId = undefined;\n        /**\n         * Main loop of the program, try to run and update the game at 60 fps\n         */\n        this.run = () => {\n            var _a;\n            // stop run look if game becomes paused\n            if (this.isGameOver && this.isRunning) {\n                (_a = this.callbackEvents[TetrisEvent.GAME_OVER]) === null || _a === void 0 ? void 0 : _a.forEach((cb) => cb());\n                return;\n            }\n            // if (this.inputController.Input.Escape) {\n            //     if (this.isRunning) {\n            //         StateManager.GetInstance().GoToPauseModalAndPauseGame();\n            //     } else {\n            //         StateManager.GetInstance().GoToGameAndResumeGame()\n            //     }\n            // }\n            // handle all the queued events on the input controller\n            // tslint:disable-next-line: max-line-length\n            const touchControls = this.inputController.getTouchGridArea(this.config.cellSize, this.tetrisGame.get_piece_bounding_box());\n            if (touchControls) {\n                this.tetrisGame.touch_event_handler(touchControls.x, touchControls.y);\n            }\n            this.tetrisGame.event_handler(this.inputController.getEventQueue());\n            const boardMerged = this.tetrisGame.update(performance.now());\n            this.drawGrid();\n            this.drawCells();\n            this.drawPiece();\n            this.updateHoldPiece();\n            Object(_util__WEBPACK_IMPORTED_MODULE_3__[\"GetElementById\"])(\"game-time\").textContent = Object(_util__WEBPACK_IMPORTED_MODULE_3__[\"toHHMMSS\"])(this.tetrisGame.get_seconds());\n            Object(_util__WEBPACK_IMPORTED_MODULE_3__[\"GetElementById\"])(\"game-score\").textContent = `score: ${this.tetrisGame.get_score()}`;\n            // A piece was merged into the board\n            if (boardMerged) {\n                // update queued pieces view\n                this.updateQueuedPieces();\n                Object(_util__WEBPACK_IMPORTED_MODULE_3__[\"GetElementById\"])(\"game-level\").textContent = `${this.tetrisGame.get_level()}`;\n                Object(_util__WEBPACK_IMPORTED_MODULE_3__[\"GetElementById\"])(\"game-rows\").textContent = `${this.tetrisGame.get_rows_completed()}`;\n            }\n            this.animationId = requestAnimationFrame(this.run);\n        };\n        this.tetrisGame = game;\n        this.width = game.get_width();\n        this.totalHeight = game.get_height();\n        this.boardHeight = this.totalHeight - game.get_offset_height();\n        this.canvas = Object(_util__WEBPACK_IMPORTED_MODULE_3__[\"GetElementById\"])(\"tetris\");\n        this.ctx = this.canvas.getContext(\"2d\");\n        this.config = config;\n        this.settings = settings;\n        this.canvas.height = (this.config.cellSize + 1) * this.height + 1;\n        this.canvas.width = (this.config.cellSize + 1) * this.width + 1;\n        /**\n         * Initialize preview canvas\n         *\n         */\n        const previewCanvas = Object(_util__WEBPACK_IMPORTED_MODULE_3__[\"GetElementById\"])(\"preview\");\n        previewCanvas.height = this.config.previewCellSize * 4 * 6;\n        previewCanvas.width = 64;\n        /**\n         * Initialize hold piece canvas\n         *\n         */\n        const holdPiece = Object(_util__WEBPACK_IMPORTED_MODULE_3__[\"GetElementById\"])(\"hold_piece\");\n        holdPiece.height = 64;\n        holdPiece.width = 64;\n        /**\n         * Initialize Input Controls\n         *\n         */\n        this.inputController = new _InputController__WEBPACK_IMPORTED_MODULE_2__[\"default\"](this.canvas, holdPiece);\n        this.inputController.start();\n    }\n    /**\n     * Is the game paused\n     */\n    get isPaused() {\n        return this.animationId === undefined;\n    }\n    /**\n     * Is the game running?\n     */\n    get isRunning() {\n        return this.animationId !== undefined;\n    }\n    /**\n     * Is the game over?\n     */\n    get isGameOver() {\n        return this.tetrisGame.is_game_over();\n    }\n    /**\n     * Get the height of the board\n     */\n    get height() {\n        let height = this.boardHeight;\n        if (DEBUG_GAME) {\n            height = this.totalHeight;\n        }\n        return height;\n    }\n    /**\n     * Get the offset of the game board\n     * (the board is 5 more cells higher then what is presided)\n     */\n    get offsetHeight() {\n        let offset = this.totalHeight - this.boardHeight;\n        if (DEBUG_GAME) {\n            offset = 0;\n        }\n        return offset;\n    }\n    /***************************************************************************\n     * Game State\n     **************************************************************************/\n    getGameRecord() {\n        const record = new _models_GameRecord__WEBPACK_IMPORTED_MODULE_5__[\"default\"](\"placeholder\", this.tetrisGame.get_seconds(), this.tetrisGame.get_score(), this.tetrisGame.get_level(), this.tetrisGame.get_rows_completed());\n        return record;\n    }\n    addEventListener(event, callback) {\n        if (!Object(util__WEBPACK_IMPORTED_MODULE_4__[\"isObject\"])(this.callbackEvents[event])) {\n            this.callbackEvents[event] = [];\n        }\n        this.callbackEvents[event].push(callback);\n    }\n    /***************************************************************************\n     * GAME LOGIC\n     **************************************************************************/\n    /**\n     * Start tetris game\n     */\n    startTetris() {\n        this.updateQueuedPieces();\n        this.play();\n    }\n    /**\n     * Pause the game\n     * Throws error when game is already paused\n     */\n    pause() {\n        if (this.isRunning) {\n            cancelAnimationFrame(this.animationId);\n            this.animationId = undefined;\n        }\n        else {\n            throw new Error(\"Can't pause the game when it is already paused\");\n        }\n    }\n    /**\n     * Unpause the game\n     * Throws error when game is already in play\n     */\n    play() {\n        if (this.isPaused) {\n            this.animationId = requestAnimationFrame(this.run);\n            this.updateQueuedPieces();\n        }\n        else {\n            throw new Error(\"Can't play the game when it is already playing\");\n        }\n    }\n    destroy() {\n        this.inputController.stop();\n    }\n    /***************************************************************************\n     * DRAW CODE\n     **************************************************************************/\n    /**\n     * Draw the grid of the play field\n     */\n    drawGrid() {\n        this.ctx.beginPath();\n        this.ctx.strokeStyle = this.config.gridColor;\n        // Vertical lines\n        for (let i = 0; i <= this.width; i++) {\n            this.ctx.moveTo(i * (this.config.cellSize + 1) + 1, 0);\n            this.ctx.lineTo(i * (this.config.cellSize + 1) + 1, (this.config.cellSize + 1) * this.height + 1);\n        }\n        // Horizontal lines\n        for (let j = this.height; j >= 0; j--) {\n            this.ctx.moveTo(this.offsetHeight, j * (this.config.cellSize + 1) + 1);\n            this.ctx.lineTo((this.config.cellSize + 1) * this.width + 1, j * (this.config.cellSize + 1) + 1);\n        }\n        this.ctx.stroke();\n    }\n    /**\n     * Draw all the cells of the game board\n     */\n    drawCells() {\n        const cellsPtr = this.tetrisGame.get_cells();\n        const cells = new Uint8Array(_tetris_logic_pkg_rusty_web_tetris_bg__WEBPACK_IMPORTED_MODULE_1__[\"memory\"].buffer, cellsPtr, this.width * this.totalHeight);\n        this.ctx.beginPath();\n        for (let row = this.offsetHeight; row < this.totalHeight; row++) {\n            for (let col = 0; col < this.width; col++) {\n                const index = this.getIndex(row, col);\n                if (cells[index] === _tetris_logic_pkg_rusty_web_tetris__WEBPACK_IMPORTED_MODULE_0__[\"Cell\"].EMPTY && row < this.totalHeight - this.boardHeight) {\n                    this.ctx.fillStyle = \"#132456\";\n                }\n                else {\n                    this.ctx.fillStyle = getColor(cells[index]);\n                }\n                this.drawCell(row, col);\n            }\n        }\n        if (DEBUG_GAME) {\n            this.ctx.beginPath();\n            for (let row = this.offsetHeight; row < this.totalHeight; row++) {\n                for (let col = 0; col < this.width; col++) {\n                    this.ctx.fillStyle = \"red\";\n                    this.ctx.font = \"14px Arial\";\n                    this.ctx.fillText(`${this.getIndex(row, col)}`, col * (this.config.cellSize + 1) + 1, (row - this.offsetHeight) * (this.config.cellSize + 1) +\n                        this.config.cellSize);\n                }\n            }\n        }\n    }\n    /**\n     * Draw player controller falling piece\n     */\n    drawPiece() {\n        const position = this.tetrisGame.get_piece_position();\n        const shadowPiecePosition = this.tetrisGame.get_shadow_piece_position();\n        const boundingBox = this.tetrisGame.get_piece_bounding_box();\n        const cellsPtr = this.tetrisGame.get_pieces();\n        const cellType = this.tetrisGame.get_piece_type();\n        const cells = new Uint8Array(_tetris_logic_pkg_rusty_web_tetris_bg__WEBPACK_IMPORTED_MODULE_1__[\"memory\"].buffer, cellsPtr, boundingBox * boundingBox);\n        this.ctx.beginPath();\n        for (let row = 0; row < boundingBox; row++) {\n            for (let col = 0; col < boundingBox; col++) {\n                const index = row * boundingBox + col;\n                if (cells[index] !== _tetris_logic_pkg_rusty_web_tetris__WEBPACK_IMPORTED_MODULE_0__[\"Cell\"].EMPTY) {\n                    this.ctx.fillStyle = getColor(cellType);\n                    this.ctx.globalAlpha = 0.5;\n                    this.drawCell(row + shadowPiecePosition.y, col + shadowPiecePosition.x);\n                    this.ctx.globalAlpha = 1;\n                    this.drawCell(row + position.y, col + position.x);\n                }\n            }\n        }\n    }\n    /**\n     * Get and update preview canvas's with the next queued pieces\n     */\n    updateQueuedPieces() {\n        const previewCanvas = Object(_util__WEBPACK_IMPORTED_MODULE_3__[\"GetElementById\"])(\"preview\");\n        const context = previewCanvas.getContext(\"2d\");\n        if (!context) {\n            return;\n        }\n        // Get the first 6 cells types (each cell is 1 byte)\n        const queuedPieces = this.tetrisGame.get_queued_pieces();\n        const cells = new Uint8Array(_tetris_logic_pkg_rusty_web_tetris_bg__WEBPACK_IMPORTED_MODULE_1__[\"memory\"].buffer, queuedPieces, CELL_PREVIEW_AMOUNT);\n        const minX = 0;\n        let minY = 0;\n        const maxX = previewCanvas.width;\n        let maxY = previewCanvas.height;\n        // draw in background\n        context.fillStyle = \"#000000\";\n        context.fillRect(0, 0, maxX, maxY * cells.length);\n        cells.forEach((cell) => {\n            // set the needed area to draw the cells on the preview canvas's\n            let boundingBox = 3;\n            if (cell === _tetris_logic_pkg_rusty_web_tetris__WEBPACK_IMPORTED_MODULE_0__[\"Cell\"].O) {\n                boundingBox = 2;\n            }\n            else if (cell === _tetris_logic_pkg_rusty_web_tetris__WEBPACK_IMPORTED_MODULE_0__[\"Cell\"].I) {\n                boundingBox = 4;\n            }\n            // draw the cell\n            context.fillStyle = getColor(cell);\n            const pieces = getCells(cell);\n            for (let row = 0; row < boundingBox; row++) {\n                for (let col = 0; col < boundingBox; col++) {\n                    const i = row * boundingBox + col;\n                    if (pieces[i] !== _tetris_logic_pkg_rusty_web_tetris__WEBPACK_IMPORTED_MODULE_0__[\"Cell\"].EMPTY) {\n                        context.fillStyle = getColor(cell);\n                    }\n                    else {\n                        context.fillStyle = \"#000000\";\n                    }\n                    context.fillRect(minX + (col * (this.config.previewCellSize + 1) + 1), minY + (row * (this.config.previewCellSize + 1) + 1), this.config.previewCellSize, this.config.previewCellSize);\n                }\n            }\n            minY += this.config.previewCellSize * 4;\n            maxY += this.config.previewCellSize * 4;\n        });\n    }\n    /**\n     * Color in the piece that is currently being held\n     */\n    updateHoldPiece() {\n        const holdCanvas = Object(_util__WEBPACK_IMPORTED_MODULE_3__[\"GetElementById\"])(\"hold_piece\");\n        const holdCell = this.tetrisGame.get_hold_piece();\n        const context = holdCanvas.getContext(\"2d\");\n        // draw in background\n        context.beginPath();\n        context.fillStyle = \"#000000\";\n        context.fillRect(0, 0, 150, 150);\n        let boundingBox = 3;\n        if (holdCell === _tetris_logic_pkg_rusty_web_tetris__WEBPACK_IMPORTED_MODULE_0__[\"Cell\"].O) {\n            boundingBox = 2;\n        }\n        else if (holdCell === _tetris_logic_pkg_rusty_web_tetris__WEBPACK_IMPORTED_MODULE_0__[\"Cell\"].I) {\n            boundingBox = 4;\n        }\n        // piece\n        const pieces = getCells(holdCell);\n        context.beginPath();\n        context.fillStyle = getColor(holdCell);\n        for (let row = 0; row < boundingBox; row++) {\n            for (let col = 0; col < boundingBox; col++) {\n                const i = row * boundingBox + col;\n                if (pieces[i] !== _tetris_logic_pkg_rusty_web_tetris__WEBPACK_IMPORTED_MODULE_0__[\"Cell\"].EMPTY) {\n                    context.fillStyle = getColor(holdCell);\n                }\n                else {\n                    context.fillStyle = \"#000000\";\n                }\n                context.fillRect(col * (this.config.previewCellSize + 1) + 1, row * (this.config.previewCellSize + 1) + 1, this.config.previewCellSize, this.config.previewCellSize);\n            }\n        }\n        context.stroke();\n    }\n    /**\n     * Draw a cell at a certain row and column on the board\n     * @param row row cell is on\n     * @param col column cell is on\n     */\n    drawCell(row, col) {\n        this.ctx.fillRect(col * (this.config.cellSize + 1) + 1, (row - this.offsetHeight) * (this.config.cellSize + 1) + 1, this.config.cellSize, this.config.cellSize);\n    }\n    /**\n     * Get the index of a cell as if the 1D board was 2D\n     * @param row y\n     * @param col x\n     */\n    getIndex(row, col) {\n        return row * this.width + col;\n    }\n}\n/**\n * Given the type of cell that needs coloring, return a hex color\n * @param cell type of cell\n */\nfunction getColor(cell) {\n    switch (cell) {\n        case _tetris_logic_pkg_rusty_web_tetris__WEBPACK_IMPORTED_MODULE_0__[\"Cell\"].EMPTY:\n            return \"#000\"; // black\n        case _tetris_logic_pkg_rusty_web_tetris__WEBPACK_IMPORTED_MODULE_0__[\"Cell\"].I:\n            return \"#00FFFF\"; // cyan\n        case _tetris_logic_pkg_rusty_web_tetris__WEBPACK_IMPORTED_MODULE_0__[\"Cell\"].O:\n            return \"#FFFF00\"; // yellow\n        case _tetris_logic_pkg_rusty_web_tetris__WEBPACK_IMPORTED_MODULE_0__[\"Cell\"].T:\n            return \"#800080\"; // purple\n        case _tetris_logic_pkg_rusty_web_tetris__WEBPACK_IMPORTED_MODULE_0__[\"Cell\"].S:\n            return \"#00FF00\"; // green\n        case _tetris_logic_pkg_rusty_web_tetris__WEBPACK_IMPORTED_MODULE_0__[\"Cell\"].Z:\n            return \"#FF0000\"; // Red\n        case _tetris_logic_pkg_rusty_web_tetris__WEBPACK_IMPORTED_MODULE_0__[\"Cell\"].J:\n            return \"#0000FF\"; // Blue\n        case _tetris_logic_pkg_rusty_web_tetris__WEBPACK_IMPORTED_MODULE_0__[\"Cell\"].L:\n            return \"#FFA500\"; // Orange\n        default:\n            return \"#FFFFFF\"; // white\n    }\n}\n/**\n * Get array that makes up the cell on the grid\n * @param cell type of cell\n */\nfunction getCells(cell) {\n    switch (cell) {\n        case _tetris_logic_pkg_rusty_web_tetris__WEBPACK_IMPORTED_MODULE_0__[\"Cell\"].O:\n            return [_tetris_logic_pkg_rusty_web_tetris__WEBPACK_IMPORTED_MODULE_0__[\"Cell\"].O, _tetris_logic_pkg_rusty_web_tetris__WEBPACK_IMPORTED_MODULE_0__[\"Cell\"].O,\n                _tetris_logic_pkg_rusty_web_tetris__WEBPACK_IMPORTED_MODULE_0__[\"Cell\"].O, _tetris_logic_pkg_rusty_web_tetris__WEBPACK_IMPORTED_MODULE_0__[\"Cell\"].O];\n        case _tetris_logic_pkg_rusty_web_tetris__WEBPACK_IMPORTED_MODULE_0__[\"Cell\"].I:\n            return [_tetris_logic_pkg_rusty_web_tetris__WEBPACK_IMPORTED_MODULE_0__[\"Cell\"].EMPTY, _tetris_logic_pkg_rusty_web_tetris__WEBPACK_IMPORTED_MODULE_0__[\"Cell\"].EMPTY, _tetris_logic_pkg_rusty_web_tetris__WEBPACK_IMPORTED_MODULE_0__[\"Cell\"].EMPTY, _tetris_logic_pkg_rusty_web_tetris__WEBPACK_IMPORTED_MODULE_0__[\"Cell\"].EMPTY,\n                _tetris_logic_pkg_rusty_web_tetris__WEBPACK_IMPORTED_MODULE_0__[\"Cell\"].I, _tetris_logic_pkg_rusty_web_tetris__WEBPACK_IMPORTED_MODULE_0__[\"Cell\"].I, _tetris_logic_pkg_rusty_web_tetris__WEBPACK_IMPORTED_MODULE_0__[\"Cell\"].I, _tetris_logic_pkg_rusty_web_tetris__WEBPACK_IMPORTED_MODULE_0__[\"Cell\"].I,\n                _tetris_logic_pkg_rusty_web_tetris__WEBPACK_IMPORTED_MODULE_0__[\"Cell\"].EMPTY, _tetris_logic_pkg_rusty_web_tetris__WEBPACK_IMPORTED_MODULE_0__[\"Cell\"].EMPTY, _tetris_logic_pkg_rusty_web_tetris__WEBPACK_IMPORTED_MODULE_0__[\"Cell\"].EMPTY, _tetris_logic_pkg_rusty_web_tetris__WEBPACK_IMPORTED_MODULE_0__[\"Cell\"].EMPTY,\n                _tetris_logic_pkg_rusty_web_tetris__WEBPACK_IMPORTED_MODULE_0__[\"Cell\"].EMPTY, _tetris_logic_pkg_rusty_web_tetris__WEBPACK_IMPORTED_MODULE_0__[\"Cell\"].EMPTY, _tetris_logic_pkg_rusty_web_tetris__WEBPACK_IMPORTED_MODULE_0__[\"Cell\"].EMPTY, _tetris_logic_pkg_rusty_web_tetris__WEBPACK_IMPORTED_MODULE_0__[\"Cell\"].EMPTY];\n        case _tetris_logic_pkg_rusty_web_tetris__WEBPACK_IMPORTED_MODULE_0__[\"Cell\"].T:\n            return [_tetris_logic_pkg_rusty_web_tetris__WEBPACK_IMPORTED_MODULE_0__[\"Cell\"].EMPTY, _tetris_logic_pkg_rusty_web_tetris__WEBPACK_IMPORTED_MODULE_0__[\"Cell\"].T, _tetris_logic_pkg_rusty_web_tetris__WEBPACK_IMPORTED_MODULE_0__[\"Cell\"].EMPTY,\n                _tetris_logic_pkg_rusty_web_tetris__WEBPACK_IMPORTED_MODULE_0__[\"Cell\"].T, _tetris_logic_pkg_rusty_web_tetris__WEBPACK_IMPORTED_MODULE_0__[\"Cell\"].T, _tetris_logic_pkg_rusty_web_tetris__WEBPACK_IMPORTED_MODULE_0__[\"Cell\"].T,\n                _tetris_logic_pkg_rusty_web_tetris__WEBPACK_IMPORTED_MODULE_0__[\"Cell\"].EMPTY, _tetris_logic_pkg_rusty_web_tetris__WEBPACK_IMPORTED_MODULE_0__[\"Cell\"].EMPTY, _tetris_logic_pkg_rusty_web_tetris__WEBPACK_IMPORTED_MODULE_0__[\"Cell\"].EMPTY];\n        case _tetris_logic_pkg_rusty_web_tetris__WEBPACK_IMPORTED_MODULE_0__[\"Cell\"].S:\n            return [_tetris_logic_pkg_rusty_web_tetris__WEBPACK_IMPORTED_MODULE_0__[\"Cell\"].EMPTY, _tetris_logic_pkg_rusty_web_tetris__WEBPACK_IMPORTED_MODULE_0__[\"Cell\"].S, _tetris_logic_pkg_rusty_web_tetris__WEBPACK_IMPORTED_MODULE_0__[\"Cell\"].S,\n                _tetris_logic_pkg_rusty_web_tetris__WEBPACK_IMPORTED_MODULE_0__[\"Cell\"].S, _tetris_logic_pkg_rusty_web_tetris__WEBPACK_IMPORTED_MODULE_0__[\"Cell\"].S, _tetris_logic_pkg_rusty_web_tetris__WEBPACK_IMPORTED_MODULE_0__[\"Cell\"].EMPTY,\n                _tetris_logic_pkg_rusty_web_tetris__WEBPACK_IMPORTED_MODULE_0__[\"Cell\"].EMPTY, _tetris_logic_pkg_rusty_web_tetris__WEBPACK_IMPORTED_MODULE_0__[\"Cell\"].EMPTY, _tetris_logic_pkg_rusty_web_tetris__WEBPACK_IMPORTED_MODULE_0__[\"Cell\"].EMPTY];\n        case _tetris_logic_pkg_rusty_web_tetris__WEBPACK_IMPORTED_MODULE_0__[\"Cell\"].Z:\n            return [_tetris_logic_pkg_rusty_web_tetris__WEBPACK_IMPORTED_MODULE_0__[\"Cell\"].Z, _tetris_logic_pkg_rusty_web_tetris__WEBPACK_IMPORTED_MODULE_0__[\"Cell\"].Z, _tetris_logic_pkg_rusty_web_tetris__WEBPACK_IMPORTED_MODULE_0__[\"Cell\"].EMPTY,\n                _tetris_logic_pkg_rusty_web_tetris__WEBPACK_IMPORTED_MODULE_0__[\"Cell\"].EMPTY, _tetris_logic_pkg_rusty_web_tetris__WEBPACK_IMPORTED_MODULE_0__[\"Cell\"].Z, _tetris_logic_pkg_rusty_web_tetris__WEBPACK_IMPORTED_MODULE_0__[\"Cell\"].Z,\n                _tetris_logic_pkg_rusty_web_tetris__WEBPACK_IMPORTED_MODULE_0__[\"Cell\"].EMPTY, _tetris_logic_pkg_rusty_web_tetris__WEBPACK_IMPORTED_MODULE_0__[\"Cell\"].EMPTY, _tetris_logic_pkg_rusty_web_tetris__WEBPACK_IMPORTED_MODULE_0__[\"Cell\"].EMPTY];\n        case _tetris_logic_pkg_rusty_web_tetris__WEBPACK_IMPORTED_MODULE_0__[\"Cell\"].J:\n            return [_tetris_logic_pkg_rusty_web_tetris__WEBPACK_IMPORTED_MODULE_0__[\"Cell\"].EMPTY, _tetris_logic_pkg_rusty_web_tetris__WEBPACK_IMPORTED_MODULE_0__[\"Cell\"].EMPTY, _tetris_logic_pkg_rusty_web_tetris__WEBPACK_IMPORTED_MODULE_0__[\"Cell\"].J,\n                _tetris_logic_pkg_rusty_web_tetris__WEBPACK_IMPORTED_MODULE_0__[\"Cell\"].J, _tetris_logic_pkg_rusty_web_tetris__WEBPACK_IMPORTED_MODULE_0__[\"Cell\"].J, _tetris_logic_pkg_rusty_web_tetris__WEBPACK_IMPORTED_MODULE_0__[\"Cell\"].J,\n                _tetris_logic_pkg_rusty_web_tetris__WEBPACK_IMPORTED_MODULE_0__[\"Cell\"].EMPTY, _tetris_logic_pkg_rusty_web_tetris__WEBPACK_IMPORTED_MODULE_0__[\"Cell\"].EMPTY, _tetris_logic_pkg_rusty_web_tetris__WEBPACK_IMPORTED_MODULE_0__[\"Cell\"].EMPTY];\n        case _tetris_logic_pkg_rusty_web_tetris__WEBPACK_IMPORTED_MODULE_0__[\"Cell\"].L:\n            return [_tetris_logic_pkg_rusty_web_tetris__WEBPACK_IMPORTED_MODULE_0__[\"Cell\"].L, _tetris_logic_pkg_rusty_web_tetris__WEBPACK_IMPORTED_MODULE_0__[\"Cell\"].EMPTY, _tetris_logic_pkg_rusty_web_tetris__WEBPACK_IMPORTED_MODULE_0__[\"Cell\"].EMPTY,\n                _tetris_logic_pkg_rusty_web_tetris__WEBPACK_IMPORTED_MODULE_0__[\"Cell\"].L, _tetris_logic_pkg_rusty_web_tetris__WEBPACK_IMPORTED_MODULE_0__[\"Cell\"].L, _tetris_logic_pkg_rusty_web_tetris__WEBPACK_IMPORTED_MODULE_0__[\"Cell\"].L,\n                _tetris_logic_pkg_rusty_web_tetris__WEBPACK_IMPORTED_MODULE_0__[\"Cell\"].EMPTY, _tetris_logic_pkg_rusty_web_tetris__WEBPACK_IMPORTED_MODULE_0__[\"Cell\"].EMPTY, _tetris_logic_pkg_rusty_web_tetris__WEBPACK_IMPORTED_MODULE_0__[\"Cell\"].EMPTY];\n        default:\n            return [_tetris_logic_pkg_rusty_web_tetris__WEBPACK_IMPORTED_MODULE_0__[\"Cell\"].EMPTY];\n    }\n}\n/* harmony default export */ __webpack_exports__[\"default\"] = (Tetris);\n\n\n//# sourceURL=webpack:///./src/Tetris.ts?");

/***/ }),

/***/ "./src/components/BottomNav.ts":
/*!*************************************!*\
  !*** ./src/components/BottomNav.ts ***!
  \*************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _util__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../util */ \"./src/util.ts\");\n/* harmony import */ var _StateManager__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../StateManager */ \"./src/StateManager.ts\");\n/* harmony import */ var _pages_HowToPlayPage__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../pages/HowToPlayPage */ \"./src/pages/HowToPlayPage.ts\");\n/* harmony import */ var _pages_SettingsPage__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../pages/SettingsPage */ \"./src/pages/SettingsPage.ts\");\n\n\n\n\nconst RegisterBottomNav = () => {\n    class BottomNav extends HTMLElement {\n        constructor() {\n            super();\n            this.goToHowToPlay = () => {\n                console.log(\"go to how to play\");\n                _StateManager__WEBPACK_IMPORTED_MODULE_1__[\"default\"].GetInstance().Push(new _pages_HowToPlayPage__WEBPACK_IMPORTED_MODULE_2__[\"default\"]());\n            };\n            this.toggleFullScreen = () => {\n                console.log('toggle full screen');\n                if (!document.fullscreenElement) {\n                    document.documentElement.requestFullscreen();\n                }\n                else {\n                    if (document.exitFullscreen) {\n                        document.exitFullscreen();\n                    }\n                }\n            };\n            this.goToSettings = () => {\n                console.log('go to settings');\n                _StateManager__WEBPACK_IMPORTED_MODULE_1__[\"default\"].GetInstance().Push(new _pages_SettingsPage__WEBPACK_IMPORTED_MODULE_3__[\"default\"]());\n            };\n            const t = Object(_util__WEBPACK_IMPORTED_MODULE_0__[\"GetElementById\"])(\"bottom-nav\");\n            const c = t.content;\n            const temp = document.importNode(c, true);\n            this.appendChild(temp);\n        }\n        connectedCallback() {\n            console.log(\"bottom-nav init\");\n            this.howToPlayBtn = this.children[0];\n            this.toggleFullScreenBtn = this.children[1];\n            this.settingsBtn = this.children[2];\n            this.howToPlayBtn.addEventListener(\"click\", this.goToHowToPlay);\n            this.toggleFullScreenBtn.addEventListener(\"click\", this.toggleFullScreen);\n            this.settingsBtn.addEventListener(\"click\", this.goToSettings);\n        }\n        disconnectedCallback() {\n            console.log(\"bottom-nav deinit\");\n            this.howToPlayBtn.removeEventListener(\"click\", this.goToHowToPlay);\n            this.toggleFullScreenBtn.removeEventListener(\"click\", this.toggleFullScreen);\n            this.settingsBtn.removeEventListener(\"click\", this.goToSettings);\n        }\n    }\n    window.customElements.define(\"bottom-nav\", BottomNav);\n};\n/* harmony default export */ __webpack_exports__[\"default\"] = (RegisterBottomNav);\n\n\n//# sourceURL=webpack:///./src/components/BottomNav.ts?");

/***/ }),

/***/ "./src/components/GameButton.ts":
/*!**************************************!*\
  !*** ./src/components/GameButton.ts ***!
  \**************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _util__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../util */ \"./src/util.ts\");\n\nconst RegisterGameButton = () => {\n    class GameButton extends HTMLElement {\n        constructor() {\n            super();\n            const t = Object(_util__WEBPACK_IMPORTED_MODULE_0__[\"GetElementById\"])(\"game-btn\");\n            const c = t.content;\n            const temp = document.importNode(c, true);\n            this.appendChild(temp);\n        }\n    }\n    window.customElements.define(\"game-btn\", GameButton);\n};\n/* harmony default export */ __webpack_exports__[\"default\"] = (RegisterGameButton);\n\n\n//# sourceURL=webpack:///./src/components/GameButton.ts?");

/***/ }),

/***/ "./src/components/TopNav.ts":
/*!**********************************!*\
  !*** ./src/components/TopNav.ts ***!
  \**********************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _util__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../util */ \"./src/util.ts\");\n/* harmony import */ var _StateManager__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../StateManager */ \"./src/StateManager.ts\");\n/* harmony import */ var _pages_MainMenuPage__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../pages/MainMenuPage */ \"./src/pages/MainMenuPage.ts\");\n\n\n\nconst RegisterTopNav = () => {\n    class TopNav extends HTMLElement {\n        constructor() {\n            super();\n            this.goBack = () => {\n                console.log('goback');\n                _StateManager__WEBPACK_IMPORTED_MODULE_1__[\"default\"].GetInstance().Pop();\n            };\n            this.goHome = () => {\n                console.log('go home');\n                _StateManager__WEBPACK_IMPORTED_MODULE_1__[\"default\"].GetInstance().ClearAndPush(new _pages_MainMenuPage__WEBPACK_IMPORTED_MODULE_2__[\"default\"]());\n            };\n            const t = Object(_util__WEBPACK_IMPORTED_MODULE_0__[\"GetElementById\"])(\"top-nav\");\n            const c = t.content;\n            const temp = document.importNode(c, true);\n            this.appendChild(temp);\n        }\n        connectedCallback() {\n            console.log(\"top-nav init\");\n            this.backBtn = this.children[0];\n            this.homeBtn = this.children[2];\n            this.backBtn.addEventListener(\"click\", this.goBack);\n            this.homeBtn.addEventListener(\"click\", this.goHome);\n        }\n        disconnectedCallback() {\n            console.log(\"top-nav deinit\");\n            this.backBtn.addEventListener(\"click\", this.goBack);\n            this.homeBtn.addEventListener(\"click\", this.goHome);\n        }\n    }\n    window.customElements.define(\"top-nav\", TopNav);\n};\n/* harmony default export */ __webpack_exports__[\"default\"] = (RegisterTopNav);\n\n\n//# sourceURL=webpack:///./src/components/TopNav.ts?");

/***/ }),

/***/ "./src/db/Field.ts":
/*!*************************!*\
  !*** ./src/db/Field.ts ***!
  \*************************/
/*! exports provided: Field */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"Field\", function() { return Field; });\n/* harmony import */ var _StorageManager__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./StorageManager */ \"./src/db/StorageManager.ts\");\n\nfunction Field(tableName, isPrimary = false) {\n    return (target, propertyName) => {\n        _StorageManager__WEBPACK_IMPORTED_MODULE_0__[\"default\"].GetInstance()\n            .addField(tableName, propertyName, isPrimary);\n    };\n}\n\n\n//# sourceURL=webpack:///./src/db/Field.ts?");

/***/ }),

/***/ "./src/db/IndexDbDatabase.ts":
/*!***********************************!*\
  !*** ./src/db/IndexDbDatabase.ts ***!
  \***********************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return IndexDbDatabase; });\n/* harmony import */ var _StorageManager__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./StorageManager */ \"./src/db/StorageManager.ts\");\nvar __awaiter = (undefined && undefined.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\n\nclass IndexDbDatabase {\n    connect() {\n        return __awaiter(this, void 0, void 0, function* () {\n            const db = yield this.connection();\n            if (!db) {\n                console.warn(\"Couldn't connect to index database\");\n                return false;\n            }\n            const metaData = _StorageManager__WEBPACK_IMPORTED_MODULE_0__[\"default\"].GetInstance().getMetaData();\n            for (const meta of metaData) {\n                if (!this.database.objectStoreNames.contains(meta.table)) {\n                    // The database currently doesn't have our table in the database\n                    // increment the version and reopen the database\n                    const result = yield this.refreshDatabase(meta.table);\n                    console.assert(result);\n                }\n            }\n            return true;\n        });\n    }\n    save(obj) {\n        console.assert(this.database, \"Database must be connected!\");\n        console.assert(this.database.objectStoreNames.contains(obj.tableName), `Database should have table ${obj.tableName}`);\n        const save = {};\n        const metaData = _StorageManager__WEBPACK_IMPORTED_MODULE_0__[\"default\"].GetInstance().getTableMetaData(obj.tableName);\n        Object.keys(obj)\n            .filter((key) => metaData.fields.includes(key))\n            .forEach((key) => save[key] = obj[key]);\n        const request = this.database\n            .transaction(obj.tableName, \"readwrite\")\n            .objectStore(obj.tableName)\n            .put(save);\n        return new Promise((resolve, reject) => {\n            request.onerror = (event) => {\n                console.warn(event);\n                reject(false);\n            };\n            request.onsuccess = (event) => {\n                resolve(true);\n            };\n        });\n    }\n    getAll(type, filter) {\n        console.assert(this.database, \"Database must be connected!\");\n        console.assert(this.database.objectStoreNames.contains(type.tableName), `Database should have table ${type.tableName}`);\n        const request = this.database\n            .transaction([type.tableName], \"readonly\")\n            .objectStore(type.tableName)\n            .openCursor();\n        return new Promise((resolve, reject) => {\n            const data = [];\n            request.onerror = (event) => {\n                console.warn(event, `Error occurred while selecting from database ${type.tableName}`);\n                reject(data);\n            };\n            request.onsuccess = (event) => {\n                const cursor = event.target.result;\n                if (cursor) {\n                    if (!filter || (filter && filter(cursor.value))) {\n                        data.push(cursor.value);\n                    }\n                    cursor.continue();\n                }\n                if (!cursor) {\n                    resolve(data);\n                }\n            };\n        });\n    }\n    getById(type, id) {\n        console.assert(this.database, \"Database must be connected!\");\n        console.assert(this.database.objectStoreNames.contains(type.tableName), `Database should have table ${type.tableName}`);\n        const request = this.database\n            .transaction([type.tableName], \"readonly\")\n            .objectStore(type.tableName)\n            .get(id);\n        return new Promise((resolve, reject) => {\n            request.onerror = (event) => {\n                console.warn(`Could not find element ${id} from table ${type.tableName}`);\n                reject(undefined);\n            };\n            request.onsuccess = (event) => {\n                resolve(request.result);\n            };\n        });\n    }\n    connection(tableName, version) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const request = window.indexedDB.open(window.location.hostname, version);\n            return new Promise((resolve, reject) => {\n                request.onerror = (event) => {\n                    var _a;\n                    console.error(\"Database error: \" + ((_a = event.target) === null || _a === void 0 ? void 0 : _a.errorCode));\n                    reject(false);\n                };\n                request.onupgradeneeded = (event) => {\n                    // save the database\n                    const database = event.target.result;\n                    // create an object store for this database\n                    let tableMetaData = [_StorageManager__WEBPACK_IMPORTED_MODULE_0__[\"default\"].GetInstance().getTableMetaData(tableName)];\n                    if (!tableMetaData[0]) {\n                        // probably creating the database\n                        tableMetaData = _StorageManager__WEBPACK_IMPORTED_MODULE_0__[\"default\"].GetInstance().getMetaData();\n                    }\n                    console.assert(tableMetaData[0], `Table metadata doesn't exist ${tableMetaData[0]}`);\n                    for (const metaData of tableMetaData) {\n                        // create the table\n                        const objectStore = database.createObjectStore(metaData.table, {\n                            keyPath: metaData.primaryKey,\n                            autoIncrement: false,\n                        });\n                        // create the columns\n                        for (const field of metaData.fields) {\n                            if (field === metaData.primaryKey) {\n                                continue;\n                            }\n                            objectStore.createIndex(field, field, {\n                                unique: false,\n                            });\n                        }\n                    }\n                    // TODO:\n                    // currently assuming everything went hunky dory\n                    // if this exits successfully, trigger onsuccess callback\n                };\n                request.onsuccess = (event) => {\n                    this.database = event.target.result;\n                    resolve(true);\n                };\n            });\n        });\n    }\n    refreshDatabase(tableName) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (!this.database) {\n                yield this.connection(tableName);\n            }\n            const version = this.database.version + 1;\n            this.database.close();\n            return yield this.connection(tableName, version);\n        });\n    }\n}\n\n\n//# sourceURL=webpack:///./src/db/IndexDbDatabase.ts?");

/***/ }),

/***/ "./src/db/MemoryDatabase.ts":
/*!**********************************!*\
  !*** ./src/db/MemoryDatabase.ts ***!
  \**********************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return MemoryDatabase; });\n/* harmony import */ var util__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! util */ \"./node_modules/util/util.js\");\n/* harmony import */ var util__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(util__WEBPACK_IMPORTED_MODULE_0__);\n\nclass MemoryDatabase {\n    constructor() {\n        this.memoryDb = {};\n    }\n    connect() {\n        return Promise.resolve(true);\n    }\n    save(obj) {\n        if (!Object(util__WEBPACK_IMPORTED_MODULE_0__[\"isObject\"])(this.memoryDb[obj.tableName])) {\n            this.memoryDb[obj.tableName] = {};\n        }\n        this.memoryDb[obj.tableName][obj.id] = obj;\n        return Promise.resolve(true);\n    }\n    getAll(type, filter) {\n        if (!Object(util__WEBPACK_IMPORTED_MODULE_0__[\"isObject\"])(this.memoryDb[type.tableName])) {\n            return Promise.resolve([]);\n        }\n        const list = Object.keys(this.memoryDb[type.tableName])\n            .map((id) => this.memoryDb[type.tableName][id])\n            .filter((t) => (filter) ? filter(t) : true);\n        return Promise.resolve(list);\n    }\n    getById(type, id) {\n        if (!Object(util__WEBPACK_IMPORTED_MODULE_0__[\"isObject\"])(this.memoryDb[type.tableName])) {\n            return Promise.resolve(undefined);\n        }\n        return Promise.resolve(this.memoryDb[type.tableName][id]);\n    }\n}\n\n\n//# sourceURL=webpack:///./src/db/MemoryDatabase.ts?");

/***/ }),

/***/ "./src/db/QueryService.ts":
/*!********************************!*\
  !*** ./src/db/QueryService.ts ***!
  \********************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return QueryService; });\n/* harmony import */ var _IndexDbDatabase__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./IndexDbDatabase */ \"./src/db/IndexDbDatabase.ts\");\n/* harmony import */ var _MemoryDatabase__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./MemoryDatabase */ \"./src/db/MemoryDatabase.ts\");\nvar __awaiter = (undefined && undefined.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\n\n\nclass QueryService {\n    constructor() {\n        this.isConnected = false;\n        this.db = (window.indexedDB) ? new _IndexDbDatabase__WEBPACK_IMPORTED_MODULE_0__[\"default\"]()\n            : new _MemoryDatabase__WEBPACK_IMPORTED_MODULE_1__[\"default\"]();\n    }\n    static GetInstance() {\n        return QueryService.instance || (QueryService.instance = new QueryService());\n    }\n    connect() {\n        return __awaiter(this, void 0, void 0, function* () {\n            const result = yield this.db.connect();\n            if (!result && this.db instanceof _IndexDbDatabase__WEBPACK_IMPORTED_MODULE_0__[\"default\"]) {\n                console.log(\"Couldn't create IndexDB database, setting up in-memory database\");\n                this.db = new _MemoryDatabase__WEBPACK_IMPORTED_MODULE_1__[\"default\"]();\n            }\n            return true;\n        });\n    }\n    save(object) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (!this.isConnected) {\n                yield this.connect();\n            }\n            return yield this.db.save(object);\n        });\n    }\n    getAll(type, filter) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (!this.isConnected) {\n                yield this.connect();\n            }\n            const data = yield this.db.getAll(type, filter);\n            return data.map((item) => Object.create(type, this.makePropertiesObj(item)));\n        });\n    }\n    getById(type, id) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (!this.isConnected) {\n                yield this.connect();\n            }\n            const data = yield this.db.getById(type, id);\n            if (data) {\n                return Object.create(type, this.makePropertiesObj(data));\n            }\n            return data;\n        });\n    }\n    // Customize this if you don't want the default settings on the properties object.\n    makePropertiesObj(obj) {\n        return Object.keys(obj).reduce((propertiesObj, currentKey) => {\n            propertiesObj[currentKey] = {\n                value: obj[currentKey],\n                writable: false,\n            };\n            return propertiesObj;\n        }, {}); // The object passed in is the propertiesObj in the callback\n    }\n}\n\n\n//# sourceURL=webpack:///./src/db/QueryService.ts?");

/***/ }),

/***/ "./src/db/StorageManager.ts":
/*!**********************************!*\
  !*** ./src/db/StorageManager.ts ***!
  \**********************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return StorageManager; });\nclass StorageManager {\n    constructor() {\n        this.storage = [];\n        this.tableQueue = [];\n    }\n    static GetInstance() {\n        return StorageManager.instance || (StorageManager.instance = new StorageManager());\n    }\n    addTable(table) {\n        const fields = this.tableQueue\n            .filter((item) => item.table === table)\n            .map((item) => item.field);\n        const keys = this.tableQueue\n            .filter((item) => item.primaryKey)\n            .filter((item) => item.table === table);\n        let primaryKey;\n        if (keys[0]) {\n            primaryKey = keys[0].field;\n        }\n        const record = { table, fields, primaryKey };\n        this.storage.push(record);\n    }\n    addField(table, field, isPrimary) {\n        const item = this.storage.find((o) => o.table === table);\n        if (item !== undefined) {\n            item.fields.push(field);\n        }\n        else {\n            this.tableQueue.push({ table, field, primaryKey: isPrimary });\n        }\n    }\n    getPrimaryKey(table) {\n        const metaData = this.storage.find((s) => s.table === table);\n        if (!metaData) {\n            return undefined;\n        }\n        if (!metaData.primaryKey) {\n            return undefined;\n        }\n        return metaData.primaryKey;\n    }\n    getMetaData() {\n        return this.storage;\n    }\n    getTableMetaData(table) {\n        return this.storage.find((s) => s.table === table);\n    }\n}\n\n\n//# sourceURL=webpack:///./src/db/StorageManager.ts?");

/***/ }),

/***/ "./src/db/Table.ts":
/*!*************************!*\
  !*** ./src/db/Table.ts ***!
  \*************************/
/*! exports provided: Table */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"Table\", function() { return Table; });\n/* harmony import */ var _StorageManager__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./StorageManager */ \"./src/db/StorageManager.ts\");\n\nfunction Table(name) {\n    // tslint:disable-next-line: ban-types\n    return (target) => {\n        _StorageManager__WEBPACK_IMPORTED_MODULE_0__[\"default\"].GetInstance().addTable(name);\n    };\n}\n\n\n//# sourceURL=webpack:///./src/db/Table.ts?");

/***/ }),

/***/ "./src/index.ts":
/*!**********************!*\
  !*** ./src/index.ts ***!
  \**********************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _StateManager__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./StateManager */ \"./src/StateManager.ts\");\n/* harmony import */ var _components_TopNav__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./components/TopNav */ \"./src/components/TopNav.ts\");\n/* harmony import */ var _components_GameButton__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./components/GameButton */ \"./src/components/GameButton.ts\");\n/* harmony import */ var _components_BottomNav__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./components/BottomNav */ \"./src/components/BottomNav.ts\");\n/* harmony import */ var _pages_MainMenuPage__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./pages/MainMenuPage */ \"./src/pages/MainMenuPage.ts\");\n\n\n\n\n\ntry {\n    Object(_components_TopNav__WEBPACK_IMPORTED_MODULE_1__[\"default\"])();\n    Object(_components_GameButton__WEBPACK_IMPORTED_MODULE_2__[\"default\"])();\n    Object(_components_BottomNav__WEBPACK_IMPORTED_MODULE_3__[\"default\"])();\n    _StateManager__WEBPACK_IMPORTED_MODULE_0__[\"default\"].GetInstance().Push(new _pages_MainMenuPage__WEBPACK_IMPORTED_MODULE_4__[\"default\"]());\n    const list = document.querySelectorAll(\"game-btn\");\n    list.forEach((btn) => {\n        btn.addEventListener(\"click\", buttonSelector);\n    });\n}\ncatch (error) {\n    console.error(error);\n    console.error(\"Stop The Game Please!\");\n}\nfunction buttonSelector(event) {\n    document.querySelectorAll(\"game-btn\").forEach((btn) => {\n        btn.classList.remove(\"selected\");\n    });\n    const self = event.target;\n    self.classList.add(\"selected\");\n}\n\n\n//# sourceURL=webpack:///./src/index.ts?");

/***/ }),

/***/ "./src/models/GameRecord.ts":
/*!**********************************!*\
  !*** ./src/models/GameRecord.ts ***!
  \**********************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _db_Table__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../db/Table */ \"./src/db/Table.ts\");\n/* harmony import */ var _db_Field__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../db/Field */ \"./src/db/Field.ts\");\n/* harmony import */ var _util__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../util */ \"./src/util.ts\");\n/* harmony import */ var _db_QueryService__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../db/QueryService */ \"./src/db/QueryService.ts\");\nvar __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __awaiter = (undefined && undefined.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\n\n\n\n\nlet GameRecord = class GameRecord {\n    constructor(username, seconds, score, level, rows) {\n        this.tableName = \"game_record\";\n        this.id = Object(_util__WEBPACK_IMPORTED_MODULE_2__[\"uuid\"])();\n        this.username = username;\n        this.seconds = seconds;\n        this.score = score;\n        this.level = level;\n        this.rows = rows;\n        this.createdAt = new Date();\n    }\n    Save() {\n        return __awaiter(this, void 0, void 0, function* () {\n            const result = yield _db_QueryService__WEBPACK_IMPORTED_MODULE_3__[\"default\"].GetInstance().save(this);\n            console.assert(result, \"Game record wasn't successfully saved\");\n        });\n    }\n    createHtmlItem() {\n        const item = document.createElement(\"li\");\n        item.classList.add(\"game-record\");\n        this.addHTMLSpan(item);\n        return item;\n    }\n    createHTMLDiv() {\n        const item = document.createElement(\"div\");\n        item.classList.add(\"game-record\");\n        this.addHTMLSpan(item);\n        return item;\n    }\n    addHTMLSpan(item) {\n        [this.score, this.level, this.rows, this.seconds].forEach((val, i) => {\n            const span = document.createElement(\"span\");\n            if (i === 3) {\n                span.textContent = Object(_util__WEBPACK_IMPORTED_MODULE_2__[\"toHHMMSS\"])(val);\n            }\n            else {\n                span.textContent = `${val}`;\n            }\n            item.appendChild(span);\n        });\n    }\n};\n__decorate([\n    Object(_db_Field__WEBPACK_IMPORTED_MODULE_1__[\"Field\"])(\"game_record\", true)\n], GameRecord.prototype, \"id\", void 0);\n__decorate([\n    Object(_db_Field__WEBPACK_IMPORTED_MODULE_1__[\"Field\"])(\"game_record\")\n], GameRecord.prototype, \"username\", void 0);\n__decorate([\n    Object(_db_Field__WEBPACK_IMPORTED_MODULE_1__[\"Field\"])(\"game_record\")\n], GameRecord.prototype, \"seconds\", void 0);\n__decorate([\n    Object(_db_Field__WEBPACK_IMPORTED_MODULE_1__[\"Field\"])(\"game_record\")\n], GameRecord.prototype, \"score\", void 0);\n__decorate([\n    Object(_db_Field__WEBPACK_IMPORTED_MODULE_1__[\"Field\"])(\"game_record\")\n], GameRecord.prototype, \"level\", void 0);\n__decorate([\n    Object(_db_Field__WEBPACK_IMPORTED_MODULE_1__[\"Field\"])(\"game_record\")\n], GameRecord.prototype, \"rows\", void 0);\n__decorate([\n    Object(_db_Field__WEBPACK_IMPORTED_MODULE_1__[\"Field\"])(\"game_record\")\n], GameRecord.prototype, \"createdAt\", void 0);\nGameRecord = __decorate([\n    Object(_db_Table__WEBPACK_IMPORTED_MODULE_0__[\"Table\"])(\"game_record\")\n], GameRecord);\n/* harmony default export */ __webpack_exports__[\"default\"] = (GameRecord);\n\n\n//# sourceURL=webpack:///./src/models/GameRecord.ts?");

/***/ }),

/***/ "./src/models/Settings.ts":
/*!********************************!*\
  !*** ./src/models/Settings.ts ***!
  \********************************/
/*! exports provided: Settings */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"Settings\", function() { return Settings; });\n/* harmony import */ var _db_Table__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../db/Table */ \"./src/db/Table.ts\");\n/* harmony import */ var _db_Field__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../db/Field */ \"./src/db/Field.ts\");\n/* harmony import */ var _db_QueryService__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../db/QueryService */ \"./src/db/QueryService.ts\");\nvar __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __awaiter = (undefined && undefined.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar Settings_1;\n\n\n\nlet Settings = Settings_1 = class Settings {\n    constructor(setting) {\n        var _a, _b, _c, _d, _e, _f;\n        this.tableName = \"settings\";\n        this.id = \"settings\";\n        this.sound = ((_a = setting) === null || _a === void 0 ? void 0 : _a.sound) || true;\n        this.music = ((_b = setting) === null || _b === void 0 ? void 0 : _b.music) || true;\n        this.notifications = ((_c = setting) === null || _c === void 0 ? void 0 : _c.notifications) || true;\n        this.vibration = ((_d = setting) === null || _d === void 0 ? void 0 : _d.vibration) || true;\n        this.musicVolume = ((_e = setting) === null || _e === void 0 ? void 0 : _e.musicVolume) || 50;\n        this.soundVolume = ((_f = setting) === null || _f === void 0 ? void 0 : _f.soundVolume) || 50;\n    }\n    static GetSettings() {\n        return __awaiter(this, void 0, void 0, function* () {\n            const type = new Settings_1();\n            const setting = yield _db_QueryService__WEBPACK_IMPORTED_MODULE_2__[\"default\"].GetInstance().getById(type, type.id);\n            if (!setting) {\n                return type;\n            }\n            return new Settings_1(setting);\n        });\n    }\n    static Save(stats) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return yield _db_QueryService__WEBPACK_IMPORTED_MODULE_2__[\"default\"].GetInstance().save(stats);\n        });\n    }\n};\n__decorate([\n    Object(_db_Field__WEBPACK_IMPORTED_MODULE_1__[\"Field\"])(\"settings\", true)\n], Settings.prototype, \"id\", void 0);\n__decorate([\n    Object(_db_Field__WEBPACK_IMPORTED_MODULE_1__[\"Field\"])(\"settings\")\n], Settings.prototype, \"sound\", void 0);\n__decorate([\n    Object(_db_Field__WEBPACK_IMPORTED_MODULE_1__[\"Field\"])(\"settings\")\n], Settings.prototype, \"music\", void 0);\n__decorate([\n    Object(_db_Field__WEBPACK_IMPORTED_MODULE_1__[\"Field\"])(\"settings\")\n], Settings.prototype, \"notifications\", void 0);\n__decorate([\n    Object(_db_Field__WEBPACK_IMPORTED_MODULE_1__[\"Field\"])(\"settings\")\n], Settings.prototype, \"vibration\", void 0);\n__decorate([\n    Object(_db_Field__WEBPACK_IMPORTED_MODULE_1__[\"Field\"])(\"settings\")\n], Settings.prototype, \"musicVolume\", void 0);\n__decorate([\n    Object(_db_Field__WEBPACK_IMPORTED_MODULE_1__[\"Field\"])(\"settings\")\n], Settings.prototype, \"soundVolume\", void 0);\nSettings = Settings_1 = __decorate([\n    Object(_db_Table__WEBPACK_IMPORTED_MODULE_0__[\"Table\"])(\"settings\")\n], Settings);\n\n\n\n//# sourceURL=webpack:///./src/models/Settings.ts?");

/***/ }),

/***/ "./src/pages/CustomizationPage.ts":
/*!****************************************!*\
  !*** ./src/pages/CustomizationPage.ts ***!
  \****************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return CustomizationPage; });\n/* harmony import */ var _Page__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./Page */ \"./src/pages/Page.ts\");\n\nclass CustomizationPage extends _Page__WEBPACK_IMPORTED_MODULE_0__[\"default\"] {\n    constructor() {\n        super(\"customization-page\");\n    }\n}\n\n\n//# sourceURL=webpack:///./src/pages/CustomizationPage.ts?");

/***/ }),

/***/ "./src/pages/GameOverModal.ts":
/*!************************************!*\
  !*** ./src/pages/GameOverModal.ts ***!
  \************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return GameOverModal; });\n/* harmony import */ var _Page__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./Page */ \"./src/pages/Page.ts\");\n/* harmony import */ var _util__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../util */ \"./src/util.ts\");\n/* harmony import */ var _StateManager__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../StateManager */ \"./src/StateManager.ts\");\n/* harmony import */ var _MainMenuPage__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./MainMenuPage */ \"./src/pages/MainMenuPage.ts\");\n/* harmony import */ var _GamePage__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./GamePage */ \"./src/pages/GamePage.ts\");\n/* harmony import */ var _db_QueryService__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../db/QueryService */ \"./src/db/QueryService.ts\");\nvar __awaiter = (undefined && undefined.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\n\n\n\n\n\n\nvar HighScoreList;\n(function (HighScoreList) {\n    HighScoreList[HighScoreList[\"ME\"] = 0] = \"ME\";\n    HighScoreList[HighScoreList[\"FRIENDS\"] = 1] = \"FRIENDS\";\n})(HighScoreList || (HighScoreList = {}));\nclass GameOverModal extends _Page__WEBPACK_IMPORTED_MODULE_0__[\"default\"] {\n    constructor() {\n        super(\"game-over-modal\");\n        this.exitGame = () => {\n            _StateManager__WEBPACK_IMPORTED_MODULE_2__[\"default\"].GetInstance().ClearAndPush(new _MainMenuPage__WEBPACK_IMPORTED_MODULE_3__[\"default\"]());\n        };\n        this.restartGame = () => __awaiter(this, void 0, void 0, function* () {\n            _StateManager__WEBPACK_IMPORTED_MODULE_2__[\"default\"].GetInstance().Pop();\n            _StateManager__WEBPACK_IMPORTED_MODULE_2__[\"default\"].GetInstance().Swap(yield _GamePage__WEBPACK_IMPORTED_MODULE_4__[\"default\"].Create());\n        });\n        this.fillListWithMyHighScores = () => __awaiter(this, void 0, void 0, function* () {\n            this._highScoreListType = HighScoreList.ME;\n            const records = yield _db_QueryService__WEBPACK_IMPORTED_MODULE_5__[\"default\"].GetInstance().getAll(this._currentScore);\n            records.sort((a, b) => b.score - a.score);\n            this._highScores = records.slice(0, 5);\n            this.myHighScoresBtn.classList.add(\"selected\");\n            this.renderList();\n        });\n        this.fillListWithFriendsHighScores = () => __awaiter(this, void 0, void 0, function* () {\n            this._highScoreListType = HighScoreList.FRIENDS;\n            this.renderList();\n        });\n        this._highScoreListType = HighScoreList.ME;\n        this._highScores = [];\n        const temp = Object(_util__WEBPACK_IMPORTED_MODULE_1__[\"GetElementById\"])(\"game-over-modal\");\n        this.highScoresList = Object(_util__WEBPACK_IMPORTED_MODULE_1__[\"GetChildElement\"])(temp, \".game-over__list\");\n        this.currentGameScore = Object(_util__WEBPACK_IMPORTED_MODULE_1__[\"GetElementById\"])(\"game-over-result\");\n        this.exitGameBtn = Object(_util__WEBPACK_IMPORTED_MODULE_1__[\"GetElementById\"])(\"game-over-exit\");\n        this.restartBtn = Object(_util__WEBPACK_IMPORTED_MODULE_1__[\"GetElementById\"])(\"game-over-restart\");\n        this.myHighScoresBtn = Object(_util__WEBPACK_IMPORTED_MODULE_1__[\"GetElementById\"])(\"game-over-me\");\n        this.myFriendsScoresBtn = Object(_util__WEBPACK_IMPORTED_MODULE_1__[\"GetElementById\"])(\"game-over-friends\");\n        this.exitGameBtn.addEventListener(\"click\", this.exitGame);\n        this.restartBtn.addEventListener(\"click\", this.restartGame);\n        this.myHighScoresBtn.addEventListener(\"click\", this.fillListWithMyHighScores);\n        this.myFriendsScoresBtn.addEventListener(\"click\", this.fillListWithFriendsHighScores);\n    }\n    set currentScore(value) {\n        this._currentScore = value;\n    }\n    show() {\n        const _super = Object.create(null, {\n            show: { get: () => super.show }\n        });\n        return __awaiter(this, void 0, void 0, function* () {\n            if (!this._currentScore) {\n                console.assert(\"current score must be provided by pervious state\");\n            }\n            Object(_util__WEBPACK_IMPORTED_MODULE_1__[\"ClearAllHTMLChildren\"])(this.currentGameScore);\n            this.currentGameScore.appendChild(this._currentScore.createHTMLDiv());\n            this.fillListWithMyHighScores();\n            _super.show.call(this);\n            return false;\n        });\n    }\n    destroy() {\n        super.destroy();\n        this.exitGameBtn.removeEventListener(\"click\", this.exitGame);\n        this.restartBtn.removeEventListener(\"click\", this.restartGame);\n        this.myHighScoresBtn.removeEventListener(\"click\", this.fillListWithMyHighScores);\n        this.myFriendsScoresBtn.removeEventListener(\"click\", this.fillListWithFriendsHighScores);\n    }\n    renderList() {\n        Object(_util__WEBPACK_IMPORTED_MODULE_1__[\"ClearAllHTMLChildren\"])(this.highScoresList);\n        if (this._highScores.length === 0) {\n            console.log('empty list');\n        }\n        else {\n            this._highScores\n                .map((r) => r.createHtmlItem())\n                .forEach((item) => this.highScoresList.appendChild(item));\n        }\n    }\n}\n\n\n//# sourceURL=webpack:///./src/pages/GameOverModal.ts?");

/***/ }),

/***/ "./src/pages/GamePage.ts":
/*!*******************************!*\
  !*** ./src/pages/GamePage.ts ***!
  \*******************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return GamePage; });\n/* harmony import */ var _Page__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./Page */ \"./src/pages/Page.ts\");\n/* harmony import */ var _util__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../util */ \"./src/util.ts\");\n/* harmony import */ var _StateManager__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../StateManager */ \"./src/StateManager.ts\");\n/* harmony import */ var _Tetris__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../Tetris */ \"./src/Tetris.ts\");\n/* harmony import */ var _PauseModal__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./PauseModal */ \"./src/pages/PauseModal.ts\");\n/* harmony import */ var _tetris_logic_pkg_rusty_web_tetris__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../.././rusty_web_tetris */ \"./rusty_web_tetris.js\");\n/* harmony import */ var _models_Settings__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../models/Settings */ \"./src/models/Settings.ts\");\n/* harmony import */ var _GameOverModal__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./GameOverModal */ \"./src/pages/GameOverModal.ts\");\nvar __awaiter = (undefined && undefined.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\n\n\n\n\n\n\n\n\nclass GamePage extends _Page__WEBPACK_IMPORTED_MODULE_0__[\"default\"] {\n    constructor(settings) {\n        super(\"game-page\");\n        this.pauseGame = () => {\n            if (this.game.isRunning) {\n                this.game.pause();\n            }\n            _StateManager__WEBPACK_IMPORTED_MODULE_2__[\"default\"].GetInstance().Push(new _PauseModal__WEBPACK_IMPORTED_MODULE_4__[\"default\"](), false);\n        };\n        this.recordGame = () => __awaiter(this, void 0, void 0, function* () {\n            this.game.pause();\n            const record = this.game.getGameRecord();\n            yield record.Save();\n            const gameOverState = new _GameOverModal__WEBPACK_IMPORTED_MODULE_7__[\"default\"]();\n            gameOverState.currentScore = record;\n            _StateManager__WEBPACK_IMPORTED_MODULE_2__[\"default\"].GetInstance().Push(gameOverState, false);\n        });\n        this.pauseBtn = Object(_util__WEBPACK_IMPORTED_MODULE_1__[\"GetElementById\"])(\"game-pause\");\n        this.pauseBtn.addEventListener(\"click\", this.pauseGame);\n        this.rightContentBar = Object(_util__WEBPACK_IMPORTED_MODULE_1__[\"GetElementById\"])(\"game__board__item--right\");\n        this.mainContentBar = Object(_util__WEBPACK_IMPORTED_MODULE_1__[\"GetElementById\"])(\"game__board__item--main\");\n        this.leftContentBar = Object(_util__WEBPACK_IMPORTED_MODULE_1__[\"GetElementById\"])(\"game__board__item--left\");\n        this.game = new _Tetris__WEBPACK_IMPORTED_MODULE_3__[\"default\"](_tetris_logic_pkg_rusty_web_tetris__WEBPACK_IMPORTED_MODULE_5__[\"Game\"].new(), settings, this.CalculateTetrisConfig());\n        this.game.addEventListener(_Tetris__WEBPACK_IMPORTED_MODULE_3__[\"TetrisEvent\"].GAME_OVER, this.recordGame);\n    }\n    static Create() {\n        return __awaiter(this, void 0, void 0, function* () {\n            const settings = yield _models_Settings__WEBPACK_IMPORTED_MODULE_6__[\"Settings\"].GetSettings();\n            return new GamePage(settings);\n        });\n    }\n    show() {\n        this.rightContentBar.style.width = `${64}px`;\n        this.leftContentBar.style.width = `${64}px`;\n        if (!this.game.isGameOver) {\n            this.game.play();\n        }\n        return super.show();\n    }\n    hide() {\n        super.hide();\n        if (!this.game.isPaused && !this.game.isGameOver) {\n            this.game.pause();\n        }\n    }\n    destroy() {\n        super.destroy();\n        this.pauseBtn.removeEventListener(\"click\", this.pauseGame);\n        this.game.destroy();\n    }\n    CalculateTetrisConfig() {\n        const width = document.documentElement.clientWidth - 8 * 4;\n        let cellSize = (.70 * width) / 10;\n        let previewCellSize = (.15 * width) / 4;\n        if (cellSize > 35) {\n            cellSize = 35;\n        }\n        if (previewCellSize > 15) {\n            previewCellSize = 15;\n        }\n        return {\n            gridColor: \"#FFF\",\n            cellSize,\n            previewCellSize\n        };\n    }\n}\n\n\n//# sourceURL=webpack:///./src/pages/GamePage.ts?");

/***/ }),

/***/ "./src/pages/HowToPlayPage.ts":
/*!************************************!*\
  !*** ./src/pages/HowToPlayPage.ts ***!
  \************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return HowToPlayPage; });\n/* harmony import */ var _Page__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./Page */ \"./src/pages/Page.ts\");\n\nclass HowToPlayPage extends _Page__WEBPACK_IMPORTED_MODULE_0__[\"default\"] {\n    constructor() {\n        super(\"how-to-play-page\");\n    }\n}\n\n\n//# sourceURL=webpack:///./src/pages/HowToPlayPage.ts?");

/***/ }),

/***/ "./src/pages/MainMenuPage.ts":
/*!***********************************!*\
  !*** ./src/pages/MainMenuPage.ts ***!
  \***********************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return MainMenuPage; });\n/* harmony import */ var _Page__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./Page */ \"./src/pages/Page.ts\");\n/* harmony import */ var _StateManager__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../StateManager */ \"./src/StateManager.ts\");\n/* harmony import */ var _util__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../util */ \"./src/util.ts\");\n/* harmony import */ var _Tetris__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../Tetris */ \"./src/Tetris.ts\");\n/* harmony import */ var _tetris_logic_pkg_rusty_web_tetris__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../.././rusty_web_tetris */ \"./rusty_web_tetris.js\");\n/* harmony import */ var _GamePage__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./GamePage */ \"./src/pages/GamePage.ts\");\n/* harmony import */ var _CustomizationPage__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./CustomizationPage */ \"./src/pages/CustomizationPage.ts\");\n/* harmony import */ var _StatisticsPage__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./StatisticsPage */ \"./src/pages/StatisticsPage.ts\");\nvar __awaiter = (undefined && undefined.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\n\n\n\n\n\n\n\n\nclass MainMenuPage extends _Page__WEBPACK_IMPORTED_MODULE_0__[\"default\"] {\n    constructor() {\n        super(\"main-menu-page\");\n        this.animationFrameId = 0;\n        this.playGame = () => __awaiter(this, void 0, void 0, function* () {\n            _StateManager__WEBPACK_IMPORTED_MODULE_1__[\"default\"].GetInstance().Push(yield _GamePage__WEBPACK_IMPORTED_MODULE_5__[\"default\"].Create());\n        });\n        this.customize = () => {\n            _StateManager__WEBPACK_IMPORTED_MODULE_1__[\"default\"].GetInstance().Push(new _CustomizationPage__WEBPACK_IMPORTED_MODULE_6__[\"default\"]());\n        };\n        this.statistics = () => {\n            _StateManager__WEBPACK_IMPORTED_MODULE_1__[\"default\"].GetInstance().Push(new _StatisticsPage__WEBPACK_IMPORTED_MODULE_7__[\"default\"]());\n        };\n        this.run = () => {\n            this.pieces.forEach(({ type, x, y, cells, rotation }) => {\n                const cellSize = 20;\n                this.ctx.fillStyle = Object(_Tetris__WEBPACK_IMPORTED_MODULE_3__[\"getColor\"])(type);\n                cells.forEach((cell) => {\n                    if (cell === _tetris_logic_pkg_rusty_web_tetris__WEBPACK_IMPORTED_MODULE_4__[\"Cell\"].EMPTY) {\n                        return;\n                    }\n                    this.ctx.fillRect(x * (cellSize + 1) + 1, y * (cellSize + 1) + 1, cellSize, cellSize);\n                });\n            });\n            this.animationFrameId = requestAnimationFrame(this.run);\n        };\n        this.playBtn = Object(_util__WEBPACK_IMPORTED_MODULE_2__[\"GetElementById\"])(\"main-menu-play\");\n        this.playBtn.addEventListener(\"click\", this.playGame);\n        this.canvas = Object(_util__WEBPACK_IMPORTED_MODULE_2__[\"GetElementById\"])(\"main-menu-canvas\");\n        this.customizeBtn = Object(_util__WEBPACK_IMPORTED_MODULE_2__[\"GetElementById\"])(\"main-menu-custom\");\n        this.customizeBtn.addEventListener(\"click\", this.customize);\n        this.statisticsBtn = Object(_util__WEBPACK_IMPORTED_MODULE_2__[\"GetElementById\"])(\"main-menu-stats\");\n        this.statisticsBtn.addEventListener(\"click\", this.statistics);\n        const allCells = [_tetris_logic_pkg_rusty_web_tetris__WEBPACK_IMPORTED_MODULE_4__[\"Cell\"].I, _tetris_logic_pkg_rusty_web_tetris__WEBPACK_IMPORTED_MODULE_4__[\"Cell\"].O, _tetris_logic_pkg_rusty_web_tetris__WEBPACK_IMPORTED_MODULE_4__[\"Cell\"].T, _tetris_logic_pkg_rusty_web_tetris__WEBPACK_IMPORTED_MODULE_4__[\"Cell\"].S, _tetris_logic_pkg_rusty_web_tetris__WEBPACK_IMPORTED_MODULE_4__[\"Cell\"].Z, _tetris_logic_pkg_rusty_web_tetris__WEBPACK_IMPORTED_MODULE_4__[\"Cell\"].J, _tetris_logic_pkg_rusty_web_tetris__WEBPACK_IMPORTED_MODULE_4__[\"Cell\"].L];\n        this.pieces = allCells.map((type) => {\n            const cells = Object(_Tetris__WEBPACK_IMPORTED_MODULE_3__[\"getCells\"])(type);\n            const x = Object(_util__WEBPACK_IMPORTED_MODULE_2__[\"randomInteger\"])(this.canvas.width);\n            const y = Object(_util__WEBPACK_IMPORTED_MODULE_2__[\"randomInteger\"])(this.canvas.height);\n            const rotation = Object(_util__WEBPACK_IMPORTED_MODULE_2__[\"randomInteger\"])(35, -35);\n            return { type, x, y, cells, rotation };\n        });\n        this.canvas.width = window.innerWidth;\n        this.ctx = this.canvas.getContext(\"2d\");\n        // this.animationFrameId = requestAnimationFrame(this.run);\n    }\n    hide() {\n        cancelAnimationFrame(this.animationFrameId);\n        super.hide();\n    }\n    destroy() {\n        super.destroy();\n        this.playBtn.removeEventListener(\"click\", this.playGame);\n        this.customizeBtn.removeEventListener(\"click\", this.customize);\n        this.statisticsBtn.removeEventListener(\"click\", this.statistics);\n    }\n    /**\n     * Draw a cell at a certain row and column on the board\n     * @param row row cell is on\n     * @param col column cell is on\n     */\n    drawCell({ type, x, y, cells, rotation }) {\n        const cellSize = 20;\n        this.ctx.fillStyle = Object(_Tetris__WEBPACK_IMPORTED_MODULE_3__[\"getColor\"])(type);\n        cells.forEach((cell) => {\n            if (cell === _tetris_logic_pkg_rusty_web_tetris__WEBPACK_IMPORTED_MODULE_4__[\"Cell\"].EMPTY) {\n                return;\n            }\n            this.ctx.fillRect(x * (cellSize + 1) + 1, y * (cellSize + 1) + 1, cellSize, cellSize);\n        });\n    }\n}\n\n\n//# sourceURL=webpack:///./src/pages/MainMenuPage.ts?");

/***/ }),

/***/ "./src/pages/Page.ts":
/*!***************************!*\
  !*** ./src/pages/Page.ts ***!
  \***************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return Page; });\n/* harmony import */ var _util__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../util */ \"./src/util.ts\");\nvar __awaiter = (undefined && undefined.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\n\nclass Page {\n    constructor(id) {\n        this.parentElement = Object(_util__WEBPACK_IMPORTED_MODULE_0__[\"GetElementById\"])(id);\n        this.id = id;\n    }\n    /**\n     * Hide the current page\n     */\n    hide() {\n        console.log(`hiding ${this.id}`);\n        this.parentElement.style.display = \"none\";\n    }\n    /**\n     * Show the page\n     *\n     * {return} boolean - hide the last page shown\n     *      to hide the previous state, return true\n     *      to keep the last state visible, return false\n     */\n    show() {\n        return __awaiter(this, void 0, void 0, function* () {\n            console.log(`showing ${this.id}`);\n            this.parentElement.style.display = \"block\";\n            return Promise.resolve(true);\n        });\n    }\n    isShowing() {\n        return this.parentElement.style.display === \"block\";\n    }\n    /**\n     * Remove any event listeners binded to the page\n     */\n    destroy() {\n        console.log(`destroying ${this.id}`);\n    }\n}\n\n\n//# sourceURL=webpack:///./src/pages/Page.ts?");

/***/ }),

/***/ "./src/pages/PauseModal.ts":
/*!*********************************!*\
  !*** ./src/pages/PauseModal.ts ***!
  \*********************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return PauseModal; });\n/* harmony import */ var _Page__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./Page */ \"./src/pages/Page.ts\");\n/* harmony import */ var _StateManager__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../StateManager */ \"./src/StateManager.ts\");\n/* harmony import */ var _util__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../util */ \"./src/util.ts\");\n/* harmony import */ var _MainMenuPage__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./MainMenuPage */ \"./src/pages/MainMenuPage.ts\");\n/* harmony import */ var _GamePage__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./GamePage */ \"./src/pages/GamePage.ts\");\n/* harmony import */ var _SettingsPage__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./SettingsPage */ \"./src/pages/SettingsPage.ts\");\n/* harmony import */ var _CustomizationPage__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./CustomizationPage */ \"./src/pages/CustomizationPage.ts\");\nvar __awaiter = (undefined && undefined.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\n\n\n\n\n\n\n\nclass PauseModal extends _Page__WEBPACK_IMPORTED_MODULE_0__[\"default\"] {\n    constructor() {\n        super(\"pause-game-modal\");\n        this.resumeGame = () => {\n            _StateManager__WEBPACK_IMPORTED_MODULE_1__[\"default\"].GetInstance().Pop();\n        };\n        this.restartGame = () => __awaiter(this, void 0, void 0, function* () {\n            _StateManager__WEBPACK_IMPORTED_MODULE_1__[\"default\"].GetInstance().Pop();\n            _StateManager__WEBPACK_IMPORTED_MODULE_1__[\"default\"].GetInstance().Swap(yield _GamePage__WEBPACK_IMPORTED_MODULE_4__[\"default\"].Create());\n        });\n        this.customizePage = () => {\n            _StateManager__WEBPACK_IMPORTED_MODULE_1__[\"default\"].GetInstance().Push(new _CustomizationPage__WEBPACK_IMPORTED_MODULE_6__[\"default\"]());\n        };\n        this.settingPage = () => {\n            _StateManager__WEBPACK_IMPORTED_MODULE_1__[\"default\"].GetInstance().Push(new _SettingsPage__WEBPACK_IMPORTED_MODULE_5__[\"default\"]());\n        };\n        this.exitGame = () => {\n            _StateManager__WEBPACK_IMPORTED_MODULE_1__[\"default\"].GetInstance().ClearAndPush(new _MainMenuPage__WEBPACK_IMPORTED_MODULE_3__[\"default\"]());\n        };\n        this.resumeBtn = Object(_util__WEBPACK_IMPORTED_MODULE_2__[\"GetElementById\"])(\"pause-game-resume\");\n        this.restartBtn = Object(_util__WEBPACK_IMPORTED_MODULE_2__[\"GetElementById\"])(\"pause-game-restart\");\n        this.customizeBtn = Object(_util__WEBPACK_IMPORTED_MODULE_2__[\"GetElementById\"])(\"pause-game-customize\");\n        this.settingsBtn = Object(_util__WEBPACK_IMPORTED_MODULE_2__[\"GetElementById\"])(\"pause-game-setting\");\n        this.exitGameBtn = Object(_util__WEBPACK_IMPORTED_MODULE_2__[\"GetElementById\"])(\"pause-game-exit\");\n        this.resumeBtn.addEventListener(\"click\", this.resumeGame);\n        this.restartBtn.addEventListener(\"click\", this.restartGame);\n        this.customizeBtn.addEventListener(\"click\", this.customizePage);\n        this.settingsBtn.addEventListener(\"click\", this.settingPage);\n        this.exitGameBtn.addEventListener(\"click\", this.exitGame);\n    }\n    show() {\n        super.show();\n        return Promise.resolve(false);\n    }\n    destroy() {\n        super.destroy();\n        this.resumeBtn.removeEventListener(\"click\", this.resumeGame);\n        this.restartBtn.removeEventListener(\"click\", this.restartGame);\n        this.customizeBtn.removeEventListener(\"click\", this.customizePage);\n        this.settingsBtn.removeEventListener(\"click\", this.settingPage);\n        this.exitGameBtn.removeEventListener(\"click\", this.exitGame);\n    }\n}\n\n\n//# sourceURL=webpack:///./src/pages/PauseModal.ts?");

/***/ }),

/***/ "./src/pages/SettingsPage.ts":
/*!***********************************!*\
  !*** ./src/pages/SettingsPage.ts ***!
  \***********************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return SettingsPage; });\n/* harmony import */ var _Page__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./Page */ \"./src/pages/Page.ts\");\n\nclass SettingsPage extends _Page__WEBPACK_IMPORTED_MODULE_0__[\"default\"] {\n    constructor() {\n        super(\"settings-page\");\n    }\n}\n\n\n//# sourceURL=webpack:///./src/pages/SettingsPage.ts?");

/***/ }),

/***/ "./src/pages/StatisticsPage.ts":
/*!*************************************!*\
  !*** ./src/pages/StatisticsPage.ts ***!
  \*************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return StatisticsPage; });\n/* harmony import */ var _Page__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./Page */ \"./src/pages/Page.ts\");\n\nclass StatisticsPage extends _Page__WEBPACK_IMPORTED_MODULE_0__[\"default\"] {\n    constructor() {\n        super(\"statistics-page\");\n    }\n}\n\n\n//# sourceURL=webpack:///./src/pages/StatisticsPage.ts?");

/***/ }),

/***/ "./src/util.ts":
/*!*********************!*\
  !*** ./src/util.ts ***!
  \*********************/
/*! exports provided: GetElementById, GetChildElement, ClearAllHTMLChildren, randomInteger, sanitizeId, toHHMMSS, uuid */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"GetElementById\", function() { return GetElementById; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"GetChildElement\", function() { return GetChildElement; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"ClearAllHTMLChildren\", function() { return ClearAllHTMLChildren; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"randomInteger\", function() { return randomInteger; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"sanitizeId\", function() { return sanitizeId; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"toHHMMSS\", function() { return toHHMMSS; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"uuid\", function() { return uuid; });\nfunction GetElementById(id) {\n    const temp = document.getElementById(id);\n    if (temp === null) {\n        throw new Error(`Div element [${id}] must exist for game to work!`);\n    }\n    return temp;\n}\nfunction GetChildElement(parent, selector) {\n    const temp = parent.querySelector(selector);\n    if (temp === null) {\n        throw new Error(`child element [${selector}] of #${parent.id} must exist for game to work!`);\n    }\n    return temp;\n}\nfunction ClearAllHTMLChildren(parent) {\n    while (parent.firstChild) {\n        parent.removeChild(parent.firstChild);\n    }\n}\nfunction randomInteger(max, min = 0) {\n    return Math.floor(Math.random() * Math.floor(max)) + Math.floor(min);\n}\nfunction sanitizeId(id) {\n    return id.replace(\" \", \"_\").toLocaleLowerCase();\n}\nfunction toHHMMSS(time) {\n    time = Math.floor(time);\n    const hours = Math.floor(time / 3600);\n    const minutes = Math.floor((time - (hours * 3600)) / 60);\n    const seconds = time - (hours * 3600) - (minutes * 60);\n    let timeString = \"\";\n    if (hours > 0) {\n        timeString += (hours < 10) ? `0${hours}:` : `${hours}:`;\n    }\n    timeString += (minutes < 10) ? `0${minutes}:` : `${minutes}:`;\n    timeString += (seconds < 10) ? `0${seconds}` : `${seconds}`;\n    return timeString;\n}\nfunction uuid() {\n    const temp = [1e7];\n    // eslint-disable-next-line\n    return (temp + -1e3 + -4e3 + -8e3 + -1e11).replace(/[018]/g, (c) => \n    // eslint-disable-next-line\n    (c ^ crypto.getRandomValues(new Uint8Array(1))[0] & 15 >> c / 4).toString(16));\n}\n\n\n//# sourceURL=webpack:///./src/util.ts?");

/***/ })

}]);